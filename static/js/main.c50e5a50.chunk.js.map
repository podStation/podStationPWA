{"version":3,"sources":["components/Menu.tsx","lib/PodcastSearcher.ts","lib/OfflineStorageHandler.ts","lib/PodcastindexOrgClient.ts","lib/PodcastsController.ts","lib/SubscriptionHandler.ts","lib/PodcastPlayer.ts","components/FooterPlayer.tsx","pages/PageWithFooter.tsx","pages/AddPodcastPage.tsx","lib/OpmlParser.ts","pages/Home.tsx","pages/PodcastsPage.tsx","components/EpisodeItem.tsx","pages/PodcastPage.tsx","pages/About.tsx","pages/FundIt.tsx","pages/InProgress.tsx","pages/Settings.tsx","pages/EpisodesPage.tsx","App.tsx","serviceWorker.ts","index.tsx","../node_modules/@ionic/core/dist/esm-es5 lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object"],"names":["appPages","title","url","iosIcon","homeOutline","mdIcon","homeSharp","searchOutline","searchSharp","logoRss","micOutline","micSharp","playOutline","playSharp","cashOutline","cashSharp","settingsOutline","settingsSharp","helpCircleOutline","helpCircleSharp","Menu","location","useLocation","contentId","type","id","map","appPage","index","key","autoHide","className","pathname","routerLink","routerDirection","lines","detail","slot","ios","md","PodcastSearcher","searchTerms","resultCallback","this","searchPodcastindexOrg","then","podcasts","items","authDate","Math","floor","Date","valueOf","fetch","toString","hashPodcastindexOrgAuthorization","AUTH_KEY","headers","response","json","jsonResponse","feeds","feed","feedUrl","imageUrl","image","description","podcastIndexOrgId","plainTextAuthorization","window","crypto","subtle","digest","TextEncoder","encode","digestArrayBuffer","buf2hex","buffer","Array","prototype","call","Uint8Array","x","slice","join","Database","episodes","version","stores","table","Dexie","OfflineStorageHandlerImplementation","db","podcast","add","update","toArray","where","equals","first","result","undefined","bulkPut","episode","podcastId","reverse","sortBy","count","asOfPubDate","belowOrEqual","limit","aboveOrEqual","delete","PodcastIndexOrgClientImplementation","buildHeaders","link","item","pubDate","datePublished","enclosure","enclosureUrl","length","enclosureLength","enclosureType","guid","buildAuthorizationHeader","AUTH_SECRET","PodcastsControllerImplementation","offlineStorageHandler","podcastIndexOrgClient","addPodcast","status","getPodcastByFeedUrl","podcastAtPodcastindexOrg","updatePodcast","getEpisodes","putEpisodes","mapPodcastIndexOrgEpisodeToStorage","podcastIndexOrgLastEpisodeFetch","Promise","all","podcastIndexOrgEpisode","getPodcasts","storedPodcast","getPodcast","storedEpisodes","forEach","matchIndex","findIndex","storedEpisode","push","getAllEpisodes","addPodcastToEpisodes","getEpisodesInProgress","episodesInProgress","episodeId","position","updateEpisode","lastTimeListened","find","p","SubscriptionHandlerImplementation","podcastsController","subscribed","addPodcasts","storedPodcasts","resolve","filter","PodcastPlayerSingleton","podcastController","audio","_episode","Error","pause","removeAttribute","load","Audio","src","currentTime","play","setMediaSessionMetadata","navigator","mediaSession","metadata","MediaMetadata","artwork","sizes","hasMedia","isPlaying","paused","duration","instance","setInterval","playerState","getInstance","getPlayerState","updateEpisodeCurrentTime","FooterPlayer","podcastPlayer","timeout","state","setState","clearInterval","resume","e","value","isNaN","setCurrentTime","min","max","onIonChange","handleRangeChanged","timeFormatter","onClick","handleClickPause","handleClickPlay","seconds","date","setSeconds","toISOString","substr","React","Component","PageWithFooter","props","children","AddPodcastPage","subscriptionHandler","podcastSearchResult","searchText","preventDefault","ps","search","searchResultsWithSubscriptions","addDefaultSubscriptionToSearchResults","getSubscriptions","subscriptions","adjustSubscriptionInSearchResults","psr","subscribe","subscription","document","getElementById","click","files","currentTarget","file","reader","FileReader","onload","fileContent","subscribeToMany","opmlContent","parsedDocument","DOMParser","parseFromString","from","querySelectorAll","outline","attributes","getNamedItem","parseOpml","readAsText","fullscreen","collapse","size","onSubmit","handleSearchSubmit","debounce","setSearchText","handleClickImportOpml","style","display","accept","onChange","handleChangeOpmlUploader","disabled","handleClickSubscribe","Home","useParams","name","PodcastsPageState","PodcastsPage","updatePodcasts","complete","onIonRefresh","doRefresh","pullingText","encodeURIComponent","btoa","EpisodeItem","showThumbnail","PodcastPage","allEpisodes","lastItemToRender","atob","decodeURIComponent","match","params","encodedFeedUrl","target","onIonInfinite","handleInfiniteScroll","About","href","FundIt","InProgressPage","SettingsPage","deleteDatabase","handleClickReset","EpisodesPage","EPISODES_PER_PAGE","lastShownEpisode","splice","App","path","component","exact","to","Boolean","hostname","ReactDOM","render","serviceWorker","ready","registration","unregister","webpackAsyncContext","req","__webpack_require__","o","code","ids","keys","Object","module","exports"],"mappings":"mMAwBMA,G,MAAsB,CAC3B,CACCC,MAAO,OACPC,IAAK,aACLC,QAASC,IACTC,OAAQC,KAET,CACCL,MAAO,iBACPC,IAAK,mBACLC,QAASI,IACTF,OAAQG,KAET,CACCP,MAAO,gBACPC,IAAK,iBACLC,QAASM,IACTJ,OAAQI,KAET,CACCR,MAAO,WACPC,IAAK,iBACLC,QAASO,IACTL,OAAQM,KAET,CACCV,MAAO,cACPC,IAAK,mBACLC,QAASS,IACTP,OAAQQ,KAET,CACCZ,MAAO,UACPC,IAAK,eACLC,QAASW,IACTT,OAAQU,KAET,CACCd,MAAO,WACPC,IAAK,iBACLC,QAASa,IACTX,OAAQY,KAET,CACChB,MAAO,QACPC,IAAK,cACLC,QAASe,IACTb,OAAQc,OA2BKC,EAvBQ,WACtB,IAAMC,EAAWC,cAEjB,OACC,kBAAC,IAAD,CAASC,UAAU,OAAOC,KAAK,WAC9B,kBAAC,IAAD,KACC,kBAAC,IAAD,CAASC,GAAG,cACXzB,EAAS0B,KAAI,SAACC,EAASC,GACvB,OACA,kBAAC,IAAD,CAAeC,IAAKD,EAAOE,UAAU,GACpC,kBAAC,IAAD,CAASC,UAAWV,EAASW,WAAaL,EAAQzB,IAAM,WAAa,GAAI+B,WAAYN,EAAQzB,IAAKgC,gBAAgB,OAAOC,MAAM,OAAOC,QAAQ,GAC9I,kBAAC,IAAD,CAASC,KAAK,QAAQC,IAAKX,EAAQxB,QAASoC,GAAIZ,EAAQtB,SACxD,kBAAC,IAAD,KAAWsB,EAAQ1B,gB,2DCvFJuC,E,+FACbC,EAAqBC,GAC3BC,KAAKC,sBAAsBH,GAAaI,MAAK,SAACC,GAC7CJ,EAAe,CACdK,MAAOD,S,qFAK0BL,G,iFAClB,uBACG,2CACdO,EAAWC,KAAKC,OAAO,IAAIC,MAAQC,UAAY,K,KAEhCC,M,KAAM,wDAA0DZ,E,KAEpEO,EAASM,W,KANT,uB,SASQd,EAAgBe,iCAAiCC,+DAAyBR,G,gCAHjG,c,KACA,a,KACA,aAAc,aACd,c,YAJDS,Q,mDADGC,E,iBASqBA,EAASC,O,eAA9BC,E,yBAEGA,EAAaC,MAAMnC,KAAI,SAACoC,GAC9B,MAAO,CACNC,QAASD,EAAK5D,IACdD,MAAO6D,EAAK7D,MACZ+D,SAAUF,EAAKG,MACfC,YAAaJ,EAAKI,YAClBC,kBAAmBL,EAAKrC,Q,qMAKmB2C,G,uFACbC,OAAOC,OAAOC,OAAOC,OAAO,SAAU,IAAIH,OAAOI,aAAeC,OAAON,I,cAAjGO,E,yBACCnC,EAAgBoC,QAAQD,I,gIAGjBE,GACd,OAAOC,MAAMC,UAAUrD,IAAIsD,KAAK,IAAIC,WAAWJ,IAAS,SAAAK,GAAC,OAAK,KAAOA,EAAE5B,SAAS,KAAK6B,OAAO,MAAIC,KAAK,Q,KCwBjGC,E,kDAIL,aAAe,IAAD,8BACb,cAAM,eAJPvC,cAGc,IAFdwC,cAEc,EAGb,EAAKC,QAAQ,GAAGC,OAAO,CACtB1C,SAAU,wEACVwC,SAAU,+EAGX,EAAKxC,SAAW,EAAK2C,MAAM,YAC3B,EAAKH,SAAW,EAAKG,MAAM,YATd,E,gBAJQC,GA8BVC,EAAb,iDACSC,GAAK,IAAIP,EADlB,gGAGkBQ,GAHlB,0FAISlD,KAAKiD,GAAG9C,SAASgD,IAAID,IAJ9B,oLAOqBA,GAPrB,iFAQQlD,KAAKiD,GAAG9C,SAASiD,OAAOF,EAAQpE,GAAIoE,GAR5C,qQAYgBlD,KAAKiD,GAAG9C,SAASkD,UAZjC,wNAekBjC,GAflB,uFAgBqBpB,KAAKiD,GAAG9C,SAASmD,MAAM,WAAWC,OAAOnC,GAASoC,QAhBvE,cAgBMC,EAhBN,yBAkBSA,QAAwCC,GAlBjD,kLAqBmBf,GArBnB,0FAsBS3C,KAAKiD,GAAGN,SAASgB,QAAQhB,IAtBlC,oLAyBqBiB,GAzBrB,iFA0BQ5D,KAAKiD,GAAGN,SAASS,OAAOQ,EAAQ9E,GAAI8E,GA1B5C,kLA6BmBC,GA7BnB,iFA8BgB7D,KAAKiD,GAAGN,SAASW,MAAM,aAAaC,OAAOM,GAAWC,UAAUC,OAAO,WA9BvF,6NAiCsBC,EAAeC,GAjCrC,iFAkCgBjE,KAAKiD,GAAGN,SAASW,MAAM,WAAWY,aAAaD,GAAaH,UAAUK,MAAMH,GAAOX,UAlCnG,yTAsCgBrD,KAAKiD,GAAGN,SAASW,MAAM,YAAYc,aAAa,GAAGN,UAAUC,OAAO,oBAtCpF,+SA0CQ/D,KAAKiD,GAAGoB,SA1ChB,OA4CErE,KAAKiD,GAAK,IAAIP,EA5ChB,6GCpEa4B,EAAb,qJAI2BlD,GAJ3B,qFAKyBV,MALzB,2EAK8FU,GAL9F,SAMkBkD,EAAoCC,eANtD,gCAMGzD,QANH,iDAKQC,EALR,iBAS6BA,EAASC,OATtC,eASQC,EATR,yBAWS,CACNnC,GAAImC,EAAaE,KAAKrC,GACtBxB,MAAO2D,EAAaE,KAAK7D,MACzBiE,YAAaN,EAAaE,KAAK7D,MAC/BkH,KAAMvD,EAAaE,KAAKqD,KACxBnD,SAAUJ,EAAaE,KAAKG,QAhB/B,8KAoBmBF,GApBnB,qFAqBuBV,MArBvB,qFAqBsGU,GArBtG,SAsBkBkD,EAAoCC,eAtBtD,gCAsBGzD,QAtBH,iDAqBMC,EArBN,iBAyB2BA,EAASC,OAzBpC,eAyBMC,EAzBN,yBA2BSA,EAAab,MAAMrB,KAAI,SAAC0F,GAgB9B,MAfuB,CACtB3F,GAAI2F,EAAK3F,GACTxB,MAAOmH,EAAKnH,MACZkH,KAAMC,EAAKD,KACXjD,YAAakD,EAAKlD,YAClBmD,QAASD,EAAKE,cACdC,UAAW,CACVrH,IAAKkH,EAAKI,aACVC,OAAQL,EAAKM,gBACblG,KAAM4F,EAAKO,eAEZC,KAAMR,EAAKQ,KACX5D,SAAUoD,EAAKnD,WAxCnB,iQAgDQjB,EAAWC,KAAKC,OAAO,IAAIC,MAAQC,UAAY,KAhDvD,KAmDkBJ,EAASM,WAnD3B,KAoDiBX,KAAKa,SApDtB,SAsD0ByD,EAAoCY,yBAAyB7E,EAASM,YAtDhG,6CAmDG,cAnDH,KAoDG,aApDH,KAqDG,aAAc,aACd,cAtDH,qMA0D+CN,GA1D/C,0FA2DSL,KAAKY,iCAAiCZ,KAAKa,SAAWb,KAAKmF,YAAc9E,IA3DlF,uMA8DuDoB,GA9DvD,uFA+DkCC,OAAOC,OAAOC,OAAOC,OAAO,SAAU,IAAIH,OAAOI,aAAeC,OAAON,IA/DzG,cA+DQO,EA/DR,yBAgESsC,EAAoCrC,QAAQD,IAhErD,gIAmEwBE,GACtB,OAAOC,MAAMC,UAAUrD,IAAIsD,KAAK,IAAIC,WAAWJ,IAAS,SAAAK,GAAC,OAAK,KAAOA,EAAE5B,SAAS,KAAK6B,OAAO,MAAIC,KAAK,QApEvG,KAAa6B,EACYzD,SAAW,uBADvByD,EAEYa,YAAc,2CCChC,IAAMC,EAAb,iDACCC,sBAA+C,IAAIrC,EADpD,KAECsC,sBAA+C,IAAIhB,EAFpD,gGAIkBpB,GAJlB,kGAKwBlD,KAAKqF,sBAAsBE,WAA3B,2BAClBrC,GADkB,IAErBsC,OAAQ,SAPX,UAKM3B,EALN,OAUMX,EAAQ1B,kBAVd,gCAW0CxB,KAAKsF,sBAAsBG,oBAAoBvC,EAAQ9B,SAXjG,cAWSsE,EAXT,gBAaS1F,KAAKqF,sBAAsBM,cAAc,CAC9C7G,GAAI+E,EACJvG,MAAOoI,EAAyBpI,MAChCiE,YAAamE,EAAyBnE,YACtCiD,KAAMkB,EAAyBlB,KAC/BnD,SAAUqE,EAAyBrE,SACnCG,kBAAmBkE,EAAyB5G,KAnBhD,wBAuBuBkB,KAAKsF,sBAAsBM,YAAY1C,EAAQ9B,SAvBtE,eAuBMuB,EAvBN,iBAyBQ3C,KAAKqF,sBAAsBQ,YAAYlD,EAAS5D,KAAI,SAAC6E,GAC1D,OAAO,2BACH,EAAKkC,mCAAmClC,IAD5C,IAECC,UAAWA,QA5Bf,yBAgCQ7D,KAAKqF,sBAAsBM,cAAc,CAC9C7G,GAAI+E,EACJ2B,OAAQ,YACRO,gCAAiC,IAAIvF,OAnCxC,mLAuCmBL,GAvCnB,qGAwCS6F,QAAQC,IAAI9F,EAASpB,KAAI,SAACmE,GAAD,OAAa,EAAKqC,WAAWrC,QAxC/D,2JA2C4CgD,GAC1C,MAAO,CACN5I,MAAO4I,EAAuB5I,MAC9BkH,KAAM0B,EAAuB1B,KAC7BjD,YAAa2E,EAAuB3E,YACpCmD,QAAS,IAAIlE,KAAK0F,EAAuBxB,SACzCrD,SAAU6E,EAAuB7E,SACjCuD,UAAWsB,EAAuBtB,WAAa,CAC9CrH,IAAK2I,EAAuBtB,UAAUrH,IACtCuH,OAAQoB,EAAuBtB,UAAUE,OACzCjG,KAAMqH,EAAuBtB,UAAU/F,MAExCoG,KAAMiB,EAAuBjB,KAC7BzD,kBAAmB0E,EAAuBpH,MAxD7C,8JA6DgBkB,KAAKqF,sBAAsBc,cA7D3C,uCA6D0DpH,KAAI,SAACqH,GAC5D,OAAO,2BACHA,GADJ,IAECtH,GAAIsH,EAActH,GAClBxB,MAAO8I,EAAc9I,MAAQ8I,EAAc9I,MAAQ8I,EAAchF,cAjErE,gLAsEkBA,GAtElB,0FAuESpB,KAAKqF,sBAAsBgB,WAAWjF,IAvE/C,yRA2EuBpB,KAAKqF,sBAAsBc,cA3ElD,OA2EMhG,EA3EN,8BA6EUjB,GA7EV,kFA8EOgE,EAAU/C,EAASjB,GA9E1B,SA+EwB,EAAKoG,sBAAsBM,YAAY1C,EAAQ9B,SA/EvE,cA+EOuB,EA/EP,gBAgF8B,EAAKiD,YAAY1C,EAAQ9B,SAhFvD,OAgFOkF,EAhFP,OAkFG3D,EAAS4D,SAAQ,SAAC3C,GACjB,IAAI4C,EAAaF,EAAeG,WAAU,SAACC,GAC1C,OAAOA,EAAclF,oBAAsBoC,EAAQ9E,MAGjD0H,GAAc,EAChBF,EAAeE,GAAf,2BACIF,EAAeE,IACf,EAAKV,mCAAmClC,IAI5C0C,EAAeK,KAAf,2BACI,EAAKb,mCAAmClC,IAD5C,IAECC,UAAWX,EAAQpE,SAKtB,EAAKuG,sBAAsBQ,YAAYS,GArG1C,wDA6EiBnG,GA7EjB,qDA6EUjB,EA7EV,6BA6EUA,GA7EV,gNAyGmBkC,GAzGnB,uFA0GsBpB,KAAKqF,sBAAsBgB,WAAWjF,GA1G5D,cA0GM8B,EA1GN,yBA4GSA,EAAUlD,KAAKqF,sBAAsBO,YAAY1C,EAAQpE,IAAM,IA5GxE,qLA+GsBkF,EAAeC,GA/GrC,yFAgHuBjE,KAAKqF,sBAAsBc,cAhHlD,cAgHMhG,EAhHN,gBAiHuBH,KAAKqF,sBAAsBuB,eAAe5C,EAAOC,GAjHxE,cAiHMtB,EAjHN,yBAmHSyC,EAAiCyB,qBAAqBlE,EAAUxC,IAnHzE,yRAuHuBH,KAAKqF,sBAAsBc,cAvHlD,cAuHMhG,EAvHN,gBAwHiCH,KAAKqF,sBAAsByB,wBAxH5D,cAwHMC,EAxHN,yBA0HS3B,EAAiCyB,qBAAqBE,EAAoB5G,IA1HnF,qJA6H0B6G,EAAmBC,GAC3CjH,KAAKqF,sBAAsB6B,cAAc,CACxCpI,GAAIkI,EACJC,SAAUA,EACVE,iBAAkB,IAAI3G,UAjIzB,4CAqIqCmC,EAAgCxC,GACnE,OAAOwC,EAAS5D,KAAI,SAAC6E,GACpB,IAAIV,EAAU/C,EAASiH,MAAK,SAACC,GAAD,OAAOA,EAAEvI,KAAO8E,EAAQC,aAEpD,OAAO,2BACHD,GADJ,IAECV,QAASA,WA3Ib,KCVaoE,EAAb,iDACSC,mBAAyC,IAAInC,EADtD,+FAGiBlC,GAHjB,0FAISlD,KAAKuH,mBAAmBhC,WAAxB,2BACHrC,GADG,IAENsE,YAAY,MANf,sLAUuBrH,GAVvB,0FAWSH,KAAKuH,mBAAmBE,YAAYtH,EAASpB,KAAI,SAACmE,GAAD,mBAAC,eACrDA,GADoD,IAEvDsE,YAAY,SAbf,gRAkB6BxH,KAAKuH,mBAAmBpB,cAlBrD,cAkBMuB,EAlBN,yBAoBS1B,QAAQ2B,QAASD,EAAgBE,QAAO,SAAC1E,GAAD,OAAaA,EAAQsE,gBApBtE,6GCGaK,EAAb,WAMC,aAAuB,yBALfC,kBAAuC,IAAI1C,EAK7B,KAHd2C,WAGc,OAFdC,cAEc,EANvB,iDAUMpE,GAA6B,IAAD,EAChC,IAAIA,EAAQgB,UACX,MAAM,IAAIqD,MAAM,+CAGdjI,KAAK+H,OAEP/H,KAAK+H,MAAMG,QACXlI,KAAK+H,MAAMI,gBAAgB,OAC3BnI,KAAK+H,MAAMK,QAGXpI,KAAK+H,MAAQ,IAAIM,MAGlBrI,KAAKgI,SAAWpE,EAChB5D,KAAK+H,MAAMO,IAAX,UAAiB1E,EAAQgB,iBAAzB,aAAiB,EAAmBrH,IACpCyC,KAAK+H,MAAMQ,YAAc3E,EAAQqD,UAAY,EAC7CjH,KAAK+H,MAAMS,OAEXxI,KAAKyI,4BA9BP,8BAiCU,IAAD,EACP,UAAAzI,KAAK+H,aAAL,SAAYG,UAlCd,+BAqCW,IAAD,EACR,UAAAlI,KAAK+H,aAAL,SAAYS,SAtCd,qCAyCgBD,GACdvI,KAAK+H,QAAU/H,KAAK+H,MAAMQ,YAAcA,KA1C1C,gDA8CE,IAAIG,EAAiBhH,OAAOgH,UACzB1I,KAAKgI,UAAY,iBAAkBtG,OAAOgH,YAE5CA,EAAUC,aAAaC,SAAW,IAAIC,cAAc,CACnDvL,MAAO0C,KAAKgI,SAAS1K,MAGrBwL,QAAS,CACR,CAAER,IAAKtI,KAAKgI,SAAS3G,SAAU0H,MAAO,iBAtD3C,uCAiEE,MAAO,CACNC,cAAyBtF,IAAf1D,KAAK+H,MACfkB,YAAWjJ,KAAK+H,QAAS/H,KAAK+H,MAAMmB,OACpCC,SAAUnJ,KAAK+H,MAAQ/H,KAAK+H,MAAMoB,SAAW,EAC7CZ,YAAavI,KAAK+H,MAAQ/H,KAAK+H,MAAMQ,YAAc,EACnD3E,QAAS5D,KAAKgI,YAtEjB,8BA6DE,OAAOhI,KAAKgI,YA7Dd,qCA2EE,OAAOhI,KAAKoJ,WAAapJ,KAAKoJ,SAAW,IAAIvB,OA3E/C,KAAaA,EAEGuB,c,EA6EhBC,aAAY,WAGX,IAI0B,EAJtBvB,EAAuC,IAAI1C,EAE3CkE,EAD+BzB,EAAuB0B,cAC1BC,iBAE7BF,EAAYL,WACdnB,EAAkB2B,yBAAlB,UAA2CH,EAAY1F,eAAvD,aAA2C,EAAqB9E,GAAcwK,EAAYf,eAEzF,K,IC5GkBmB,E,kDAIpB,aAAe,IAAD,8BACb,cAAM,KAJCC,cAA+B9B,EAAuB0B,cAGhD,EAFNK,aAEM,EAEb,EAAKC,MAAQ,EAAKF,cAAcH,iBAFnB,E,gEAKO,IAAD,OACnBxJ,KAAK4J,QAAUP,aAAY,WAC1B,EAAKS,SAAS,EAAKH,cAAcH,oBAC/B,O,6CAIHxJ,KAAK4J,SAAWG,cAAc/J,KAAK4J,W,yCAInC5J,KAAK2J,cAAczB,QACnBlI,KAAK8J,SAAS9J,KAAK2J,cAAcH,oB,wCAIjCxJ,KAAK2J,cAAcK,SACnBhK,KAAK8J,SAAS9J,KAAK2J,cAAcH,oB,yCAGfS,GAMW,kBAAnBA,EAAExK,OAAOyK,OAAuBC,MAAMF,EAAExK,OAAOyK,QAAUD,EAAExK,OAAOyK,QAAUlK,KAAK6J,MAAMtB,cAChGvI,KAAK2J,cAAcS,eAAeH,EAAExK,OAAOyK,OAC3ClK,KAAK8J,SAAS9J,KAAK2J,cAAcH,qB,+BAWzB,IAAD,OACR,OACC,kBAAC,IAAD,KACExJ,KAAK6J,MAAMjG,SACX,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAclE,KAAK,SAClB,kBAAC,IAAD,CAAQ4I,IAAKtI,KAAK6J,MAAMjG,QAAQvC,YAEjC,kBAAC,IAAD,KAAWrB,KAAK6J,MAAMjG,QAAQtG,OAC9B,kBAAC,IAAD,CAAU+M,IAAK,EAAGC,IAAKtK,KAAK6J,MAAMV,SAAUe,MAAOlK,KAAK6J,MAAMtB,YAAagC,YAAa,SAACN,GAAD,OAAO,EAAKO,mBAAmBP,KACtH,kBAAC,IAAD,CAAUvK,KAAK,SAASgK,EAAae,cAAczK,KAAK6J,MAAMtB,aAAe,IAC7E,kBAAC,IAAD,CAAU7I,KAAK,OAAOgK,EAAae,cAAczK,KAAK6J,MAAMV,UAAY,KAExEnJ,KAAK6J,MAAMZ,WAAa,kBAAC,IAAD,CAAWvJ,KAAK,MAAMgL,QAAS,kBAAM,EAAKC,qBAA1C,UACvB3K,KAAK6J,MAAMZ,WAAa,kBAAC,IAAD,CAAWvJ,KAAK,MAAMgL,QAAS,kBAAM,EAAKE,oBAA1C,a,qCArBFC,GAE5B,IAAIC,EAAO,IAAItK,KAAK,GAEpB,OADAsK,EAAKC,WAAWF,GACTC,EAAKE,cAAcC,OAAO,GAAI,O,GA7CGC,IAAMC,WCD3BC,E,uKAEnB,OACC,kBAAC,IAAD,KACEpL,KAAKqL,MAAMC,SACZ,kBAAC,EAAD,W,GALwCJ,IAAMC,W,ICgB7BI,E,kDAGpB,WAAYF,GAAsB,IAAD,8BAChC,cAAMA,IAHPG,yBAEiC,EAGhC,EAAKA,oBAAsB,IAAIlE,EAC/B,EAAKuC,MAAQ,CACZ4B,oBAAqB,CACpBrL,MAAO,IAERsL,WAAY,IARmB,E,+DAYdzB,GAAe,IAAD,OAChCA,EAAE0B,iBACF,IAAIC,EAAsB,IAAI/L,EAE9BG,KAAK8J,SAAS,CACb2B,oBAAqB,CAACrL,MAAO,MAG9BwL,EAAGC,OAAO7L,KAAK6J,MAAM6B,YAAY,SAACjI,GACjC,IAAIqI,EAAiC,EAAKC,sCAAsCtI,GAEhF,EAAK+H,oBAAoBQ,mBACxB9L,MAAK,SAAC+L,GACN,EAAKnC,SAAS,CACb2B,oBAAqB,EAAKS,kCAAkCJ,EAAgCG,a,4DAM1DE,GACrC,MAAO,CACN/L,MAAO+L,EAAI/L,MAAMrB,KAAI,SAAC0F,GACrB,OAAO,2BACHA,GADJ,IAEC+C,YAAY,U,2CAMKyC,EAAuDxF,GAAsC,IAAD,OAChHzE,KAAKwL,oBAAoBY,UAAzB,eACI3H,IAEHvE,MAAK,kBAAM,EAAKsL,oBAAoBQ,sBACpC9L,MAAK,SAAC+L,GACN,EAAKnC,SAAS,CACb2B,oBAAqB,EAAKS,kCAAkC,EAAKrC,MAAM4B,oBAAqBQ,U,wDAK7DR,EAA0DQ,GAC3F,MAAO,CACN7L,MAAOqL,EAAoBrL,MAAMrB,KAAI,SAAC0F,GACrC,OAAO,2BACHA,GADJ,IAEC+C,gBAA6F9D,IAAjFuI,EAAc7E,MAAK,SAACiF,GAAD,OAAkBA,EAAajL,UAAYqD,EAAKrD,mB,oCAMrEsK,GACb1L,KAAK8J,SAAS,CACb4B,WAAYA,M,8CAIiB,IAAD,EAC7B,UAAAY,SAASC,eAAe,uBAAxB,SAAyCC,U,+CAGjBvC,GAA+C,IAAD,OAChEwC,EAAQxC,EAAEyC,cAAcD,MACxBE,EAAOF,GAASA,EAAM,GAE5B,GAAGE,EAAM,CACR,IAAMC,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,SAAC7C,GAEhB,IAAM8C,EAAc9C,EAAEyC,cAAcjJ,OACpC,EAAK+H,oBAAoBwB,gBCvGd,SAAmBC,GACjC,IAEMC,GAFY,IAAIC,WAEWC,gBAAgBH,EAAa,mBAI9D,OAFiB9K,MAAMkL,KAAKH,EAAeI,iBAAiB,wBAG3D1F,QAAO,SAAC2F,GAAD,uBAAaA,EAAQC,WAAWC,aAAa,iBAA7C,aAAa,EAA2CvD,SAC/DnL,KAAI,SAACwO,GAAa,IAAD,MACjB,MAAO,CACNjQ,MAAK,UAAEiQ,EAAQC,WAAWC,aAAa,gBAAlC,aAAE,EAA0CvD,MACjD9I,SAAS,UAAAmM,EAAQC,WAAWC,aAAa,iBAAhC,eAA2CvD,QAAS,GAC7D1F,KAAI,UAAE+I,EAAQC,WAAWC,aAAa,kBAAlC,aAAE,EAA4CvD,UD0FRwD,CAAUX,KAGpDH,EAAOe,WAAWhB,M,+BAIV,IAAD,OACR,OACC,kBAAC,EAAD,KACA,kBAAC,IAAD,KACC,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAYjN,KAAK,SAChB,kBAAC,IAAD,OAED,kBAAC,IAAD,yBAKD,kBAAC,IAAD,CAAYkO,YAAU,GACrB,kBAAC,IAAD,CAAWC,SAAS,YACpB,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAUC,KAAK,SAAf,iBAGD,0BAAMC,SAAU,SAAA9D,GAAC,OAAI,EAAK+D,mBAAmB/D,KAC5C,kBAAC,IAAD,CAAcC,MAAOlK,KAAK6J,MAAM6B,WAAYuC,SAAU,EAAG1D,YAAa,SAAAN,GAAC,OAAI,EAAKiE,cAAcjE,EAAExK,OAAOyK,WAExG,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAWQ,QAAS,SAACT,GAAD,OAAO,EAAKkE,0BAAhC,sBAGF,2BAAOrP,GAAG,eAAeD,KAAK,OAAOuP,MAAO,CAACC,QAAS,QAASC,OAAO,cAAcC,SAAU,SAACtE,GAAD,OAAO,EAAKuE,yBAAyBvE,MACnI,kBAAC,IAAD,KACEjK,KAAK6J,MAAM4B,oBAAoBrL,MAAMrB,KAAI,SAACmE,GAAD,OACzC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAcxD,KAAK,SAClB,kBAAC,IAAD,CAAQ4I,IAAKpF,EAAQ7B,YAEtB,kBAAC,IAAD,KACC,4BAAK6B,EAAQ5F,OACb,2BAAI4F,EAAQ3B,cAEZ2B,EAAQsE,WACT,kBAAC,IAAD,CAAWiH,UAAU,GAArB,cACA,kBAAC,IAAD,CAAW/D,QAAS,SAAAT,GAAC,OAAI,EAAKyE,qBAAqBzE,EAAG/G,KAAtD,wB,GAxIqCgI,IAAMC,WEUnCwD,EAxBQ,WACLC,cAATC,KAER,OACA,kBAAC,EAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAYnP,KAAK,SAChB,kBAAC,IAAD,OAED,kBAAC,IAAD,gCAIF,kBAAC,IAAD,CAAYkO,YAAU,GACrB,uHACA,8EACA,mFACA,mJ,QClBGkB,G,+GACL3O,SAA+B,KAGX4O,E,4MACpBxH,mBAAyC,IAAInC,E,mEAG5CpF,KAAK8J,SAAS,IAAIgF,K,gKAIlB9O,K,SACiBA,KAAKuH,mBAAmBpB,c,yBAAxChG,S,WADI2J,S,+LAKUG,G,iFACTjK,KAAKuH,mBAAmByH,iB,OAC9B/E,EAAExK,OAAOwP,W,sIAGA,IAAD,OACR,OACC,kBAAC,EAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAYvP,KAAK,SAChB,kBAAC,IAAD,OAED,kBAAC,IAAD,wBAID,kBAAC,IAAD,CAAYkO,YAAU,GACrB,kBAAC,IAAD,CAAclO,KAAK,QAAQwP,aAAc,SAACjF,GAAD,OAAO,EAAKkF,UAAUlF,KAC9D,kBAAC,IAAD,CAAqBmF,YAAY,qBAElC,kBAAC,IAAD,KACEpP,KAAK6J,MAAM1J,SAASpB,KAAI,SAACmE,GAAD,OACxB,kBAAC,IAAD,CAAS5D,WAAU,6BAAwB+P,mBAAmBC,KAAKpM,EAAQ9B,YAC1E,kBAAC,IAAD,CAAc1B,KAAK,SACjBwD,EAAQ7B,UAAY,kBAAC,IAAD,CAAQiH,IAAKpF,EAAQ7B,YAE3C,kBAAC,IAAD,KACC,4BAAK6B,EAAQ5F,OACb,2BAAI4F,EAAQ3B,yB,GA1CqB2J,IAAMC,WCC3BoE,E,8KACJtF,GACOpC,EAAuB0B,cAE/Bf,KAAKxI,KAAKqL,MAAMzH,W,+BAGrB,IAAD,SACR,OACA,kBAAC,IAAD,KAEE5D,KAAKqL,MAAMmE,eACX,kBAAC,IAAD,CAAc9P,KAAK,UACjB,UAAAM,KAAKqL,MAAMnI,eAAX,eAAoB7B,WAAY,kBAAC,IAAD,CAAQiH,IAAKtI,KAAKqL,MAAMnI,QAAQ7B,YAGnE,kBAAC,IAAD,KACC,4BAAKrB,KAAKqL,MAAMzH,QAAQtG,OACvB0C,KAAKqL,MAAMnI,SAAW,4BAAKlD,KAAKqL,MAAMnI,QAAQ5F,OAC/C,2BAAI0C,KAAKqL,MAAMzH,QAAQrC,cAExB,kBAAC,IAAD,CAAW7B,KAAK,MAAMgL,QAAS,SAAAT,GAAC,OAAI,EAAKW,gBAAgBX,KAAzD,a,GArBsCiB,IAAMC,WCM1BsE,E,kDAKpB,WAAYpE,GAA0B,IAAD,8BACpC,cAAMA,IALC9D,mBAAyC,IAAInC,EAIhB,EAH7BsK,YAA6B,GAGA,EAF7BC,iBAAmB,GAI1B,EAAK9F,MAAQ,GAFuB,E,uLAM9BzI,EAAUwO,KAAKC,mBAAmB7P,KAAKqL,MAAMyE,MAAMC,OAAOC,iB,KAChEhQ,K,SACgBA,KAAKuH,mBAAmBlB,WAAWjF,G,gCAAlD8B,Q,WADI4G,S,yBAIoB9J,KAAKuH,mBAAmB3B,YAAYxE,G,OAA7DpB,KAAK0P,Y,OAEL1P,KAAK8J,SAAS,CACbnH,SAAU3C,KAAK0P,YAAYlN,MAAM,EAAGxC,KAAK2P,iBAAmB,K,kJAIzC1F,GACpBjK,KAAK2P,kBAAoB,GAEzB3P,KAAK2P,iBAAmBrP,KAAK+J,IAAIrK,KAAK2P,iBAAkB3P,KAAK0P,YAAY5K,QAEzE9E,KAAK8J,SAAS,CACbnH,SAAU3C,KAAK0P,YAAYlN,MAAM,EAAGxC,KAAK2P,iBAAmB,KAG5D1F,EAAEgG,OAAwChB,a,+BAGlC,IAAD,OACR,OACC,kBAAC,EAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAYvP,KAAK,SAChB,kBAAC,IAAD,OAED,kBAAC,IAAD,CAAcA,KAAK,SAClB,kBAAC,IAAD,CAAQ4I,IAAKtI,KAAK6J,MAAM3G,SAAWlD,KAAK6J,MAAM3G,QAAQ7B,YAEvD,kBAAC,IAAD,KAAWrB,KAAK6J,MAAM3G,SAAWlD,KAAK6J,MAAM3G,QAAQ5F,SAGrD,kBAAC,IAAD,CAAYsQ,YAAU,GACrB,kBAAC,IAAD,KACE5N,KAAK6J,MAAMlH,UAAY3C,KAAK6J,MAAMlH,SAAS5D,KAAI,SAAC6E,GAAD,OAC/C,kBAAC,EAAD,CAAaA,QAASA,QAGxB,kBAAC,IAAD,CAAmBsM,cAAe,SAAAjG,GAAC,OAAI,EAAKkG,qBAAqBlG,KAChE,kBAAC,IAAD,a,GAxDmCiB,IAAMC,WCahCiF,EAzBS,WACNxB,cAATC,KAER,OACA,kBAAC,EAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAYnP,KAAK,SAChB,kBAAC,IAAD,OAED,kBAAC,IAAD,2BAIF,kBAAC,IAAD,CAAYkO,YAAU,GACrB,uHACA,8EACA,mFACA,gJACA,sGAA2E,uBAAGyC,KAAK,qDAAqDJ,OAAO,UAApE,sBAA3E,QCKYK,EAxBU,WACP1B,cAATC,KAER,OACA,kBAAC,EAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAYnP,KAAK,SAChB,kBAAC,IAAD,OAED,kBAAC,IAAD,0BAIF,kBAAC,IAAD,CAAYkO,YAAU,GACrB,gEAAqC,8CAArC,WACA,yGACA,+IACA,yCAAc,uBAAGyC,KAAK,qFAAqFJ,OAAO,UAApG,cCVIM,E,kDAKpB,WAAYlF,GAA6B,IAAD,8BACvC,cAAMA,IALC9D,mBAAyC,IAAInC,EAIb,EAHhCsK,YAAwC,GAGR,EAFhCC,iBAAmB,GAI1B,EAAK9F,MAAQ,GAF0B,E,0LAMd7J,KAAKuH,mBAAmBT,wB,OAAjD9G,KAAK0P,Y,OAEL1P,KAAK8J,SAAS,CACbnH,SAAU3C,KAAK0P,YAAYlN,MAAM,EAAGxC,KAAK2P,iBAAmB,K,iJAIzC1F,GACpBjK,KAAK2P,kBAAoB,GAEzB3P,KAAK2P,iBAAmBrP,KAAK+J,IAAIrK,KAAK2P,iBAAkB3P,KAAK0P,YAAY5K,QAEzE9E,KAAK8J,SAAS,CACbnH,SAAU3C,KAAK0P,YAAYlN,MAAM,EAAGxC,KAAK2P,iBAAmB,KAG5D1F,EAAEgG,OAAwChB,a,+BAGlC,IAAD,OACR,OACC,kBAAC,EAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAYvP,KAAK,SAChB,kBAAC,IAAD,OAED,kBAAC,IAAD,sBAGD,kBAAC,IAAD,CAAYkO,YAAU,GACrB,kBAAC,IAAD,KACE5N,KAAK6J,MAAMlH,UAAY3C,KAAK6J,MAAMlH,SAAS5D,KAAI,SAAC6E,GAAD,OAC/C,kBAAC,EAAD,CAAaA,QAASA,EAASV,QAASU,EAAQV,QAASsM,eAAe,QAG1E,kBAAC,IAAD,CAAmBU,cAAe,SAAAjG,GAAC,OAAI,EAAKkG,qBAAqBlG,KAChE,kBAAC,IAAD,a,GAhDsCiB,IAAMC,WCL7BqF,E,kDAGpB,WAAYnF,GAAuB,IAAD,8BACjC,cAAMA,IAHPhG,sBAA+C,IAAIrC,EAIlD,EAAK6G,MAAQ,GAFoB,E,6DAKjBI,GAChBjK,KAAKqF,sBAAsBoL,mB,+BAGlB,IAAD,OACR,OACC,kBAAC,EAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAY/Q,KAAK,SAChB,kBAAC,IAAD,OAED,kBAAC,IAAD,mBAGD,kBAAC,IAAD,CAAYkO,YAAU,GACrB,kBAAC,IAAD,CAAWlD,QAAS,SAACT,GAAD,OAAO,EAAKyG,iBAAiBzG,KAAjD,e,GAxBqCiB,IAAMC,W,QCE3BwF,E,kDAIpB,WAAYtF,GAAY,IAAD,8BACtB,cAAMA,IAHC9D,mBAAyC,IAAInC,EAIpD,EAAKyE,MAAQ,CACZlH,SAAS,IAHY,E,gMASC3C,KAAKuH,mBAAmBX,eAAe+J,EAAaC,kBAAmB,IAAIpQ,KAAK,S,OAAjGmC,E,OAEN3C,KAAK8J,SAAS,CACbnH,SAAUA,I,0LAIesH,G,6EACvBjK,KAAK6J,MAAMlH,SAASmC,O,uBAChB+L,EAAmB7Q,KAAK6J,MAAMlH,SAAS3C,KAAK6J,MAAMlH,SAASmC,OAAS,G,SAGnD9E,KAAKuH,mBAAmBX,eAAe+J,EAAaC,kBAAmBC,EAAiBnM,SAAW,IAAIlE,M,QAAxHmC,E,QAEM,GAAG7D,KAAO+R,EAAiB/R,IACtC6D,EAASmO,OAAO,EAAG,GAGpB9Q,KAAK8J,SAAS,CACbnH,SAAS,GAAD,mBAAM3C,KAAK6J,MAAMlH,UAAjB,YAA8BA,MAGtCsH,EAAEgG,OAAwChB,W,sIAKnC,IAAD,OACR,OACC,kBAAC,EAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAYvP,KAAK,SAChB,kBAAC,IAAD,OAED,kBAAC,IAAD,mBAGD,kBAAC,IAAD,CAAYkO,YAAU,GACrB,kBAAC,IAAD,KACE5N,KAAK6J,MAAMlH,UAAY3C,KAAK6J,MAAMlH,SAAS5D,KAAI,SAAC6E,GAAD,OAC/C,kBAAC,EAAD,CAAa4L,eAAe,EAAM5L,QAASA,EAASV,QAASU,EAAQV,cAGvE,kBAAC,IAAD,CAAmBgN,cAAe,SAAAjG,GAAC,OAAI,EAAKkG,qBAAqBlG,KAChE,kBAAC,IAAD,a,GA1DoCiB,IAAMC,WAA3BwF,EACIC,kBAA4B,GCuBrD,IA0BeG,EA1BO,WACrB,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAcnS,UAAU,QACxB,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAYE,GAAG,QACd,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOkS,KAAK,mBAAmBC,UAAW1F,EAAgB2F,OAAK,IAC/D,kBAAC,IAAD,CAAOF,KAAK,aAAaC,UAAWtC,EAAMuC,OAAK,IAC/C,kBAAC,IAAD,CAAOF,KAAK,iBAAiBC,UAAWlC,EAAcmC,OAAK,IAC3D,kBAAC,IAAD,CAAOF,KAAK,qCAAqCC,UAAWxB,EAAayB,OAAK,IAC9E,kBAAC,IAAD,CAAOF,KAAK,iBAAiBC,UAAWN,EAAcO,OAAK,IAC3D,kBAAC,IAAD,CAAOF,KAAK,mBAAmBC,UAAWV,EAAgBW,OAAK,IAC/D,kBAAC,IAAD,CAAOF,KAAK,cAAcC,UAAWb,EAAOc,OAAK,IACjD,kBAAC,IAAD,CAAOF,KAAK,eAAeC,UAAWX,EAAQY,OAAK,IACnD,kBAAC,IAAD,CAAOF,KAAK,iBAAiBC,UAAWT,EAAcU,OAAK,IAC3D,kBAAC,IAAD,CAAU7D,KAAK,IAAI8D,GAAG,aAAaD,OAAK,UCvC1BE,QACW,cAA7B1P,OAAOhD,SAAS2S,UAEe,UAA7B3P,OAAOhD,SAAS2S,UAEhB3P,OAAOhD,SAAS2S,SAASvB,MACvB,2DCbNwB,IAASC,OAAO,kBAAC,EAAD,MAASjF,SAASC,eAAe,SDsI3C,kBAAmB7D,WACrBA,UAAU8I,cAAcC,MAAMvR,MAAK,SAAAwR,GACjCA,EAAaC,iB,wDE7InB,IAAI5S,EAAM,CACT,8BAA+B,CAC9B,IACA,GAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,GAED,0BAA2B,CAC1B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,sBAAuB,CACtB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mCAAoC,CACnC,IACA,IAED,uBAAwB,CACvB,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,yBAA0B,CACzB,IACA,GAED,8BAA+B,CAC9B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAAS6S,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEhT,EAAK8S,GAC9B,OAAO7L,QAAQ2B,UAAUzH,MAAK,WAC7B,IAAI+J,EAAI,IAAIhC,MAAM,uBAAyB4J,EAAM,KAEjD,MADA5H,EAAE+H,KAAO,mBACH/H,KAIR,IAAIgI,EAAMlT,EAAI8S,GAAM/S,EAAKmT,EAAI,GAC7B,OAAOH,EAAoB7H,EAAEgI,EAAI,IAAI/R,MAAK,WACzC,OAAO4R,EAAoBhT,MAG7B8S,EAAoBM,KAAO,WAC1B,OAAOC,OAAOD,KAAKnT,IAEpB6S,EAAoB9S,GAAK,GACzBsT,EAAOC,QAAUT,G,mBChMjB,IAAI7S,EAAM,CACT,sBAAuB,CACtB,IACA,KAGF,SAAS6S,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEhT,EAAK8S,GAC9B,OAAO7L,QAAQ2B,UAAUzH,MAAK,WAC7B,IAAI+J,EAAI,IAAIhC,MAAM,uBAAyB4J,EAAM,KAEjD,MADA5H,EAAE+H,KAAO,mBACH/H,KAIR,IAAIgI,EAAMlT,EAAI8S,GAAM/S,EAAKmT,EAAI,GAC7B,OAAOH,EAAoB7H,EAAEgI,EAAI,IAAI/R,MAAK,WACzC,OAAO4R,EAAoBhT,MAG7B8S,EAAoBM,KAAO,WAC1B,OAAOC,OAAOD,KAAKnT,IAEpB6S,EAAoB9S,GAAK,GACzBsT,EAAOC,QAAUT,G","file":"static/js/main.c50e5a50.chunk.js","sourcesContent":["import {\n\tIonContent,\n\tIonIcon,\n\tIonItem,\n\tIonLabel,\n\tIonList,\n\tIonListHeader,\n\tIonMenu,\n\tIonMenuToggle,\n\tIonNote,\n} from '@ionic/react';\n\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { searchOutline, searchSharp, homeOutline, homeSharp, gitBranchOutline, logoRss, helpCircleSharp, helpCircleOutline, cashOutline, cashSharp, playSharp, playOutline, settingsOutline, settingsSharp, micOutline, micSharp } from 'ionicons/icons';\nimport './Menu.css';\n\ninterface AppPage {\n\turl: string;\n\tiosIcon: string;\n\tmdIcon: string;\n\ttitle: string;\n\t}\n\nconst appPages: AppPage[] = [\n\t{\n\t\ttitle: 'Home',\n\t\turl: '/page/Home',\n\t\tiosIcon: homeOutline,\n\t\tmdIcon: homeSharp\n\t},\n\t{\n\t\ttitle: 'Search Podcast',\n\t\turl: '/page/AddPodcast',\n\t\tiosIcon: searchOutline,\n\t\tmdIcon: searchSharp\n\t},\n\t{\n\t\ttitle: 'Your Podcasts',\n\t\turl: '/page/Podcasts',\n\t\tiosIcon: logoRss,\n\t\tmdIcon: logoRss\n\t},\n\t{\n\t\ttitle: 'Episodes',\n\t\turl: '/page/Episodes',\n\t\tiosIcon: micOutline,\n\t\tmdIcon: micSharp\n\t},\n\t{\n\t\ttitle: 'In progress',\n\t\turl: '/page/InProgress',\n\t\tiosIcon: playOutline,\n\t\tmdIcon: playSharp\n\t},\n\t{\n\t\ttitle: 'Fund it',\n\t\turl: '/page/FundIt',\n\t\tiosIcon: cashOutline,\n\t\tmdIcon: cashSharp\n\t},\n\t{\n\t\ttitle: 'Settings',\n\t\turl: '/page/Settings',\n\t\tiosIcon: settingsOutline,\n\t\tmdIcon: settingsSharp\n\t},\n\t{\n\t\ttitle: 'About',\n\t\turl: '/page/About',\n\t\tiosIcon: helpCircleOutline,\n\t\tmdIcon: helpCircleSharp\n\t},\n];\n\nconst Menu: React.FC = () => {\n\tconst location = useLocation();\n\n\treturn (\n\t\t<IonMenu contentId=\"main\" type=\"overlay\">\n\t\t\t<IonContent>\n\t\t\t\t<IonList id=\"inbox-list\">\n\t\t\t\t{appPages.map((appPage, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t<IonMenuToggle key={index} autoHide={false}>\n\t\t\t\t\t\t<IonItem className={location.pathname === appPage.url ? 'selected' : ''} routerLink={appPage.url} routerDirection=\"none\" lines=\"none\" detail={false}>\n\t\t\t\t\t\t<IonIcon slot=\"start\" ios={appPage.iosIcon} md={appPage.mdIcon} />\n\t\t\t\t\t\t<IonLabel>{appPage.title}</IonLabel>\n\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t</IonMenuToggle>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t</IonList>\n\t\t\t</IonContent>\n\t\t</IonMenu>\n\t);\n};\n\nexport default Menu;\n","export default class PodcastSearcher {\r\n\tsearch(searchTerms: string, resultCallback: (result: PodcastSearchResult) => void) {\r\n\t\tthis.searchPodcastindexOrg(searchTerms).then((podcasts) => {\r\n\t\t\tresultCallback({\r\n\t\t\t\titems: podcasts\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tprivate async searchPodcastindexOrg(searchTerms: string): Promise<PodcastSearchResultItem[]> {\r\n\t\tconst AUTH_KEY = 'NUKSUA3RXTJ8AEQPHCNP';\r\n\t\tconst AUTH_SECRET = 'BufqJNuREeuP2ThUMUq55z2A3peQt#bsw$Zdsvc3';\r\n\t\tconst authDate = Math.floor((new Date()).valueOf() / 1000);\r\n\r\n\t\tlet response = await fetch('https://api.podcastindex.org/api/1.0/search/byterm?q=' + searchTerms, { \r\n\t\t\theaders: {\r\n\t\t\t\t'X-Auth-Date': authDate.toString(),\r\n\t\t\t\t'X-Auth-Key': AUTH_KEY,\r\n\t\t\t\t'User-Agent': 'podStation',\r\n\t\t\t\t'Authorization': await PodcastSearcher.hashPodcastindexOrgAuthorization(AUTH_KEY + AUTH_SECRET + authDate)\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet jsonResponse = await response.json();\r\n\r\n\t\treturn jsonResponse.feeds.map((feed: any) => {\r\n\t\t\treturn {\r\n\t\t\t\tfeedUrl: feed.url,\r\n\t\t\t\ttitle: feed.title,\r\n\t\t\t\timageUrl: feed.image,\r\n\t\t\t\tdescription: feed.description,\r\n\t\t\t\tpodcastIndexOrgId: feed.id\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tstatic async hashPodcastindexOrgAuthorization(plainTextAuthorization: string): Promise<string> {\r\n\t\tconst digestArrayBuffer = await window.crypto.subtle.digest('SHA-1', (new window.TextEncoder()).encode(plainTextAuthorization));\r\n\t\treturn PodcastSearcher.buf2hex(digestArrayBuffer);\r\n\t}\r\n\r\n\tstatic buf2hex(buffer: ArrayBuffer): string {\r\n\t\treturn Array.prototype.map.call(new Uint8Array(buffer), x => ('00' + x.toString(16)).slice(-2)).join('');\r\n\t}\r\n}\r\n\r\nexport type PodcastSearchResult = {\r\n\titems: PodcastSearchResultItem[];\r\n}\r\n\r\nexport type PodcastSearchResultItem = {\r\n\tfeedUrl: string;\r\n\ttitle: string;\r\n\tdescription: string;\r\n\timageUrl: string;\r\n\tpodcastIndexOrgId?: number,\r\n}","import { wait } from '@testing-library/react';\r\nimport Dexie from 'dexie';\r\n\r\n// https://medium.com/@KevinBGreene/typescript-modeling-required-fields-with-mapped-types-f7bf17688786\r\ntype RequireOnly<T, K extends keyof T> = {\r\n\t[X in Exclude<keyof T, K>]?: T[X]\r\n} & {\r\n\t[P in K]-?: T[P]\r\n}\r\n\r\ntype RequireOnlyId<T extends {id?: number}> = RequireOnly<T, 'id'>;\r\nexport type RequireId<T extends {id?: number}> = Omit<T, 'id'> & {id: number};\r\ntype OmitId<T extends {id?: number}> = Omit<T, 'id'>;\r\n\r\nexport type Podcast = {\r\n\tid?: number,\r\n\tstatus: 'new' | 'processed',\r\n\tfeedUrl: string,\r\n\t/**\r\n\t * Stores known alternate feed URLs (i.e. after a permanent redirect)\r\n\t */\r\n\talternateFeedUrls?: string[],\r\n\tlastBuildDate?: Date,\r\n\tlastItemPubDate?: Date,\r\n\tfirstItemPubDate?: Date,\r\n\ttitle?: string,\r\n\tdescription?: string,\r\n\t/**\r\n\t * Podcast website\r\n\t */\r\n\tlink?: string,\r\n\timageUrl?: string,\r\n\tsubscribed: boolean,\r\n\tpodcastIndexOrgId?: number,\r\n\tpodcastIndexOrgLastEpisodeFetch?: Date,\r\n}\r\n\r\nexport type Episode = {\r\n\t// >>> feed and index data\r\n\tid?: number,\r\n\tpodcastId: number, \r\n\ttitle?: string,\r\n\tlink?: string,\r\n\tdescription?: string,\r\n\timageUrl?: string,\r\n\tcategories?: [string],\r\n\tpubDate?: Date,\r\n\tenclosure?: {\r\n\t\turl: string,\r\n\t\tlength: number,\r\n\t\ttype: string,\r\n\t},\r\n\tduration?: number,\r\n\tguid?: string,\r\n\tpodcastIndexOrgId: number\r\n\t// <<< feed and index data\r\n\t// >>> user data\r\n\t/**\r\n\t * Last known listened position in seconds\r\n\t */\r\n\tposition?: number,\r\n\tlastTimeListened?: Date,\r\n\tfinished?: boolean\r\n\t// <<< user data\r\n}\r\n\r\nclass Database extends Dexie {\r\n\tpodcasts: Dexie.Table<Podcast>;\r\n\tepisodes: Dexie.Table<Episode>;\r\n\r\n\tconstructor() {\r\n\t\tsuper('podStation');\r\n \r\n\t\tthis.version(1).stores({\r\n\t\t\tpodcasts: '++id, &feedUrl, *alternateFeedUrls, lastItemPubDate, firstItemPubDate',\r\n\t\t\tepisodes: '++id, podcastId, link, *categories, pubDate, enclosure.url, guid, position',\r\n\t\t});\r\n\r\n\t\tthis.podcasts = this.table('podcasts');\r\n\t\tthis.episodes = this.table('episodes');\r\n\t}\r\n}\r\n\r\nexport default interface OfflineStorageHandler {\r\n\taddPodcast(podcast: OmitId<Podcast>): Promise<number>;\r\n\tupdatePodcast(podcast: RequireOnlyId<Podcast>): Promise<void>;\r\n\tgetPodcasts(): Promise<RequireId<Podcast>[]>;\r\n\tgetPodcast(feedUrl: string): Promise<RequireId<Podcast> | undefined>;\r\n\tputEpisodes(episodes: Episode[]): Promise<void>;\r\n\tupdateEpisode(episode: RequireOnlyId<Episode>): Promise<void>;\r\n\tgetEpisodes(podcastId: number): Promise<RequireId<Episode>[]>\r\n\tgetAllEpisodes(count: number, asOfPubDate: Date): Promise<RequireId<Episode>[]>;\r\n\tgetEpisodesInProgress(): Promise<RequireId<Episode>[]>;\r\n\tdeleteDatabase(): Promise<void>;\r\n}\r\n\r\nexport class OfflineStorageHandlerImplementation implements OfflineStorageHandler {\r\n\tprivate db = new Database();\r\n\r\n\tasync addPodcast(podcast: Podcast): Promise<number> {\r\n\t\treturn this.db.podcasts.add(podcast);\r\n\t}\r\n\r\n\tasync updatePodcast(podcast: RequireOnlyId<Podcast>) {\r\n\t\tawait this.db.podcasts.update(podcast.id, podcast);\r\n\t}\r\n\r\n\tasync getPodcasts(): Promise<RequireId<Podcast>[]> {\r\n\t\treturn (await this.db.podcasts.toArray()) as RequireId<Podcast>[];\r\n\t}\r\n\r\n\tasync getPodcast(feedUrl: string): Promise<RequireId<Podcast> | undefined> {\r\n\t\tlet result = await this.db.podcasts.where('feedUrl').equals(feedUrl).first();\r\n\r\n\t\treturn result ? result as RequireId<Podcast> : undefined;\r\n\t}\r\n\r\n\tasync putEpisodes(episodes: Episode[]) {\r\n\t\treturn this.db.episodes.bulkPut(episodes);\r\n\t}\r\n\r\n\tasync updateEpisode(episode: RequireOnlyId<Episode>): Promise<void> {\r\n\t\tawait this.db.episodes.update(episode.id, episode);\r\n\t}\r\n\r\n\tasync getEpisodes(podcastId: number): Promise<RequireId<Episode>[]> {\r\n\t\treturn (await this.db.episodes.where('podcastId').equals(podcastId).reverse().sortBy('pubDate')) as RequireId<Episode>[];\r\n\t}\r\n\r\n\tasync getAllEpisodes(count: number, asOfPubDate: Date): Promise<RequireId<Episode>[]> {\r\n\t\treturn (await this.db.episodes.where('pubDate').belowOrEqual(asOfPubDate).reverse().limit(count).toArray()) as RequireId<Episode>[];\r\n\t}\r\n\r\n\tasync getEpisodesInProgress(): Promise<RequireId<Episode>[]> {\r\n\t\treturn (await this.db.episodes.where('position').aboveOrEqual(0).reverse().sortBy('lastTimeListened')) as RequireId<Episode>[];\r\n\t}\r\n\r\n\tasync deleteDatabase(): Promise<void> {\r\n\t\tawait this.db.delete();\r\n\r\n\t\tthis.db = new Database();\r\n\t}\r\n}","export type Podcast = {\r\n\tid: number,\r\n\ttitle: string,\r\n\tdescription: string,\r\n\tlink: string,\r\n\timageUrl: string,\r\n}\r\n\r\nexport type Episode = {\r\n\tid: number,\r\n\ttitle: string,\r\n\tlink: string,\r\n\tdescription: string,\r\n\tpubDate: number,\r\n\tenclosure: {\r\n\t\turl: string,\r\n\t\tlength: number,\r\n\t\ttype: string,\r\n\t},\r\n\tguid: string,\r\n\timageUrl: string,\r\n}\r\n\r\nexport default interface PodcastindexOrgClient {\r\n\tgetPodcastByFeedUrl(feedUrl: string): Promise<Podcast>\r\n\tgetEpisodes(feedUrl: string): Promise<Array<Episode>> \r\n}\r\n\r\nexport class PodcastIndexOrgClientImplementation implements PodcastindexOrgClient{\r\n\tprivate static readonly AUTH_KEY = 'NUKSUA3RXTJ8AEQPHCNP';\r\n\tprivate static readonly AUTH_SECRET = 'BufqJNuREeuP2ThUMUq55z2A3peQt#bsw$Zdsvc3';\r\n\r\n\tasync getPodcastByFeedUrl(feedUrl: string): Promise<Podcast> {\r\n\t\tconst response = await fetch(`https://api.podcastindex.org/api/1.0/podcasts/byfeedurl?url=${feedUrl}`, {\r\n\t\t\theaders: await PodcastIndexOrgClientImplementation.buildHeaders()\r\n\t\t});\r\n\r\n\t\tconst jsonResponse = await response.json();\r\n\r\n\t\treturn {\r\n\t\t\tid: jsonResponse.feed.id,\r\n\t\t\ttitle: jsonResponse.feed.title,\r\n\t\t\tdescription: jsonResponse.feed.title,\r\n\t\t\tlink: jsonResponse.feed.link,\r\n\t\t\timageUrl: jsonResponse.feed.image,\r\n\t\t}\r\n\t}\r\n\r\n\tasync getEpisodes(feedUrl: string): Promise<Array<Episode>> {\r\n\t\tlet response = await fetch(`https://api.podcastindex.org/api/1.0/episodes/byfeedurl?max=10000&url=${feedUrl}`, {\r\n\t\t\theaders: await PodcastIndexOrgClientImplementation.buildHeaders()\r\n\t\t});\r\n\r\n\t\tlet jsonResponse = await response.json();\r\n\r\n\t\treturn jsonResponse.items.map((item: any) => {\r\n\t\t\tlet episode: Episode = {\r\n\t\t\t\tid: item.id,\r\n\t\t\t\ttitle: item.title,\r\n\t\t\t\tlink: item.link,\r\n\t\t\t\tdescription: item.description,\r\n\t\t\t\tpubDate: item.datePublished,\r\n\t\t\t\tenclosure: {\r\n\t\t\t\t\turl: item.enclosureUrl,\r\n\t\t\t\t\tlength: item.enclosureLength,\r\n\t\t\t\t\ttype: item.enclosureType\r\n\t\t\t\t},\r\n\t\t\t\tguid: item.guid,\r\n\t\t\t\timageUrl: item.image\r\n\t\t\t}\r\n\r\n\t\t\treturn episode;\r\n\t\t})\r\n\t}\r\n\r\n\tprivate static async buildHeaders(): Promise<Record<string, string>> {\r\n\t\tconst authDate = Math.floor((new Date()).valueOf() / 1000);\r\n\r\n\t\treturn {\r\n\t\t\t'X-Auth-Date': authDate.toString(),\r\n\t\t\t'X-Auth-Key': this.AUTH_KEY,\r\n\t\t\t'User-Agent': 'podStation',\r\n\t\t\t'Authorization': await PodcastIndexOrgClientImplementation.buildAuthorizationHeader(authDate.toString())\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static async buildAuthorizationHeader(authDate: string): Promise<string> { \r\n\t\treturn this.hashPodcastindexOrgAuthorization(this.AUTH_KEY + this.AUTH_SECRET + authDate);\r\n\t}\r\n\r\n\tprivate static async hashPodcastindexOrgAuthorization(plainTextAuthorization: string): Promise<string> {\r\n\t\tconst digestArrayBuffer = await window.crypto.subtle.digest('SHA-1', (new window.TextEncoder()).encode(plainTextAuthorization));\r\n\t\treturn PodcastIndexOrgClientImplementation.buf2hex(digestArrayBuffer);\r\n\t}\r\n\r\n\tprivate static buf2hex(buffer: ArrayBuffer): string {\r\n\t\treturn Array.prototype.map.call(new Uint8Array(buffer), x => ('00' + x.toString(16)).slice(-2)).join('');\r\n\t}\r\n}","import OfflineStorageHandler, { OfflineStorageHandlerImplementation, Podcast, Episode, RequireId} from './OfflineStorageHandler';\r\nimport PodcastindexOrgClient, { PodcastIndexOrgClientImplementation, Episode as PodcastIndexOrgEpisode } from './PodcastindexOrgClient';\r\n\r\nexport type PodcastView = Podcast;\r\n\r\ntype PodcastToAdd = {\r\n\tfeedUrl: string,\r\n\ttitle?: string,\r\n\tdescription?: string,\r\n\timageUrl?: string,\r\n\tsubscribed: boolean\r\n\tpodcastIndexOrgId?: number\r\n}\r\n\r\nexport type EpisodeView = Episode;\r\nexport type EpisodeWithPodcastView = Episode & {\r\n\tpodcast: PodcastView\r\n}\r\n\r\nexport default interface PodcastsController {\r\n\taddPodcast(podcast: PodcastToAdd): Promise<void>;\r\n\taddPodcasts(podcasts: PodcastToAdd[]): Promise<void[]>;\r\n\tgetPodcasts(): Promise<Array<PodcastView>>;\r\n\tgetPodcast(feedUrl: string): Promise<PodcastView | undefined>;\r\n\tupdatePodcasts(): Promise<void>;\r\n\tgetEpisodes(feedUrl: string): Promise<EpisodeView[]>;\r\n\tgetAllEpisodes(count: number, asOfPubDate: Date): Promise<EpisodeWithPodcastView[]>;\r\n\tgetEpisodesInProgress(): Promise<EpisodeWithPodcastView[]>;\r\n\tupdateEpisodeCurrentTime(episodeId: number, currentTime: number): void;\r\n}\r\n\r\nexport class PodcastsControllerImplementation implements PodcastsController {\r\n\tofflineStorageHandler: OfflineStorageHandler = new OfflineStorageHandlerImplementation();\r\n\tpodcastIndexOrgClient: PodcastindexOrgClient = new PodcastIndexOrgClientImplementation();\r\n\r\n\tasync addPodcast(podcast: PodcastToAdd): Promise<void> {\r\n\t\tlet podcastId = await this.offlineStorageHandler.addPodcast({\r\n\t\t\t...podcast,\r\n\t\t\tstatus: 'new'\r\n\t\t});\r\n\r\n\t\tif(!podcast.podcastIndexOrgId) {\r\n\t\t\tconst podcastAtPodcastindexOrg = await this.podcastIndexOrgClient.getPodcastByFeedUrl(podcast.feedUrl);\r\n\r\n\t\t\tawait this.offlineStorageHandler.updatePodcast({\r\n\t\t\t\tid: podcastId,\r\n\t\t\t\ttitle: podcastAtPodcastindexOrg.title,\r\n\t\t\t\tdescription: podcastAtPodcastindexOrg.description,\r\n\t\t\t\tlink: podcastAtPodcastindexOrg.link,\r\n\t\t\t\timageUrl: podcastAtPodcastindexOrg.imageUrl,\r\n\t\t\t\tpodcastIndexOrgId: podcastAtPodcastindexOrg.id,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tlet episodes = await this.podcastIndexOrgClient.getEpisodes(podcast.feedUrl);\r\n\r\n\t\tawait this.offlineStorageHandler.putEpisodes(episodes.map((episode) => {\r\n\t\t\treturn {\r\n\t\t\t\t...this.mapPodcastIndexOrgEpisodeToStorage(episode),\r\n\t\t\t\tpodcastId: podcastId,\r\n\t\t\t};\r\n\t\t}));\r\n\r\n\t\tawait this.offlineStorageHandler.updatePodcast({\r\n\t\t\tid: podcastId,\r\n\t\t\tstatus: 'processed',\r\n\t\t\tpodcastIndexOrgLastEpisodeFetch: new Date()\r\n\t\t});\r\n\t}\r\n\r\n\tasync addPodcasts(podcasts: PodcastToAdd[]): Promise<void[]> {\r\n\t\treturn Promise.all(podcasts.map((podcast) => this.addPodcast(podcast)));\r\n\t}\r\n\r\n\tprivate mapPodcastIndexOrgEpisodeToStorage(podcastIndexOrgEpisode: PodcastIndexOrgEpisode): Omit<Episode, 'podcastId'> {\r\n\t\treturn {\r\n\t\t\ttitle: podcastIndexOrgEpisode.title,\r\n\t\t\tlink: podcastIndexOrgEpisode.link,\r\n\t\t\tdescription: podcastIndexOrgEpisode.description,\r\n\t\t\tpubDate: new Date(podcastIndexOrgEpisode.pubDate),\r\n\t\t\timageUrl: podcastIndexOrgEpisode.imageUrl,\r\n\t\t\tenclosure: podcastIndexOrgEpisode.enclosure && {\r\n\t\t\t\turl: podcastIndexOrgEpisode.enclosure.url,\r\n\t\t\t\tlength: podcastIndexOrgEpisode.enclosure.length,\r\n\t\t\t\ttype: podcastIndexOrgEpisode.enclosure.type\r\n\t\t\t},\r\n\t\t\tguid: podcastIndexOrgEpisode.guid,\r\n\t\t\tpodcastIndexOrgId: podcastIndexOrgEpisode.id,\r\n\t\t};\r\n\t}\r\n\r\n\tasync getPodcasts(): Promise<Array<PodcastView>> {\r\n\t\treturn (await this.offlineStorageHandler.getPodcasts()).map((storedPodcast) => {\r\n\t\t\treturn {\r\n\t\t\t\t...storedPodcast,\r\n\t\t\t\tid: storedPodcast.id as number,\r\n\t\t\t\ttitle: storedPodcast.title ? storedPodcast.title : storedPodcast.feedUrl\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tasync getPodcast(feedUrl: string): Promise<PodcastView | undefined> {\r\n\t\treturn this.offlineStorageHandler.getPodcast(feedUrl);\r\n\t}\r\n\r\n\tasync updatePodcasts(): Promise<void> {\r\n\t\tlet podcasts = await this.offlineStorageHandler.getPodcasts();\r\n\r\n\t\tfor(let key in podcasts) {\r\n\t\t\tlet podcast = podcasts[key];\r\n\t\t\tlet episodes = await this.podcastIndexOrgClient.getEpisodes(podcast.feedUrl);\r\n\t\t\tlet storedEpisodes = await this.getEpisodes(podcast.feedUrl);\r\n\r\n\t\t\tepisodes.forEach((episode) => {\r\n\t\t\t\tlet matchIndex = storedEpisodes.findIndex((storedEpisode) => {\r\n\t\t\t\t\treturn storedEpisode.podcastIndexOrgId === episode.id;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(matchIndex >= 0) {\r\n\t\t\t\t\tstoredEpisodes[matchIndex] = {\r\n\t\t\t\t\t\t...storedEpisodes[matchIndex],\r\n\t\t\t\t\t\t...this.mapPodcastIndexOrgEpisodeToStorage(episode),\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tstoredEpisodes.push({\r\n\t\t\t\t\t\t...this.mapPodcastIndexOrgEpisodeToStorage(episode),\r\n\t\t\t\t\t\tpodcastId: podcast.id as number\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.offlineStorageHandler.putEpisodes(storedEpisodes);\r\n\t\t}\r\n\t}\r\n\r\n\tasync getEpisodes(feedUrl: string): Promise<EpisodeView[]> {\r\n\t\tlet podcast = await this.offlineStorageHandler.getPodcast(feedUrl);\r\n\r\n\t\treturn podcast ? this.offlineStorageHandler.getEpisodes(podcast.id) : [];\r\n\t}\r\n\r\n\tasync getAllEpisodes(count: number, asOfPubDate: Date): Promise<EpisodeWithPodcastView[]> {\r\n\t\tlet podcasts = await this.offlineStorageHandler.getPodcasts();\r\n\t\tlet episodes = await this.offlineStorageHandler.getAllEpisodes(count, asOfPubDate);\r\n\r\n\t\treturn PodcastsControllerImplementation.addPodcastToEpisodes(episodes, podcasts);\r\n\t}\r\n\r\n\tasync getEpisodesInProgress(): Promise<EpisodeWithPodcastView[]> {\r\n\t\tlet podcasts = await this.offlineStorageHandler.getPodcasts();\r\n\t\tlet episodesInProgress = await this.offlineStorageHandler.getEpisodesInProgress();\r\n\r\n\t\treturn PodcastsControllerImplementation.addPodcastToEpisodes(episodesInProgress, podcasts);\r\n\t}\r\n\r\n\tupdateEpisodeCurrentTime(episodeId: number, position: number) {\r\n\t\tthis.offlineStorageHandler.updateEpisode({\r\n\t\t\tid: episodeId,\r\n\t\t\tposition: position,\r\n\t\t\tlastTimeListened: new Date()\r\n\t\t});\r\n\t}\r\n\r\n\tprivate static addPodcastToEpisodes(episodes: RequireId<Episode>[], podcasts: RequireId<Podcast>[]): EpisodeWithPodcastView[] {\r\n\t\treturn episodes.map((episode) => {\r\n\t\t\tlet podcast = podcasts.find((p) => p.id === episode.podcastId);\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...episode,\r\n\t\t\t\tpodcast: podcast as Podcast\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}","import PodcastsController, {PodcastsControllerImplementation} from './PodcastsController'\r\n\r\nexport type Podcast = {\r\n\tfeedUrl: string,\r\n\ttitle?: string,\r\n\tdescription?: string,\r\n\timageUrl?: string,\r\n\tpodcastIndexOrgId?: number,\r\n}\r\n\r\nexport type Subscription = {\r\n\tfeedUrl: string;\r\n};\r\n\r\nexport default interface SubscriptionHandler {\r\n\tsubscribe(podcast: Podcast): Promise<void>;\r\n\tsubscribeToMany(podcasts: Podcast[]): Promise<void[]>;\r\n\r\n\tgetSubscriptions(): Promise<Array<Subscription>>;\r\n}\r\n\r\nexport class SubscriptionHandlerImplementation implements SubscriptionHandler{\r\n\tprivate podcastsController: PodcastsController = new PodcastsControllerImplementation();\r\n\r\n\tasync subscribe(podcast: Podcast): Promise<void> {\r\n\t\treturn this.podcastsController.addPodcast({\r\n\t\t\t...podcast,\r\n\t\t\tsubscribed: true\r\n\t\t});\r\n\t}\r\n\r\n\tasync subscribeToMany(podcasts: Podcast[]): Promise<void[]> {\r\n\t\treturn this.podcastsController.addPodcasts(podcasts.map((podcast) => ({\r\n\t\t\t...podcast,\r\n\t\t\tsubscribed: true\r\n\t\t})))\r\n\t}\r\n\r\n\tasync getSubscriptions(): Promise<Array<Subscription>> {\r\n\t\tlet storedPodcasts = await this.podcastsController.getPodcasts();\r\n\t\t\r\n\t\treturn Promise.resolve((storedPodcasts).filter((podcast) => podcast.subscribed));\r\n\t}\r\n}","import { RangeValue } from '@ionic/core';\r\nimport PodcastController, { PodcastsControllerImplementation, EpisodeView } from './PodcastsController'\r\n\r\nexport type PodcastPlayerState = {\r\n\thasMedia: boolean,\r\n\tisPlaying: boolean,\r\n\tduration?: number,\r\n\tcurrentTime?: number,\r\n\tepisode?: EpisodeView\r\n}\r\n\r\nexport default interface PodcastPlayer {\r\n\tsetCurrentTime(value: number): void;\r\n\tpause(): void;\r\n\tresume(): void;\r\n\tplay(episode: EpisodeView): void;\r\n\tgetPlayerState(): PodcastPlayerState;\r\n\treadonly episode?: EpisodeView;\r\n}\r\n\r\nexport interface PodcastPlayerObserver {\r\n\tstateChanged(): void\r\n}\r\n\r\nexport class PodcastPlayerSingleton implements PodcastPlayer {\r\n\tprivate podcastController: PodcastController = new PodcastsControllerImplementation();\r\n\tprivate static instance: PodcastPlayerSingleton;\r\n\tprivate audio: HTMLAudioElement | undefined;\r\n\tprivate _episode?: EpisodeView;\r\n\r\n\tprivate constructor() {\r\n\r\n\t}\r\n\r\n\tplay(episode: EpisodeView): void {\r\n\t\tif(!episode.enclosure) {\r\n\t\t\tthrow new Error('Episodes without enclosure cannot be played');\r\n\t\t}\r\n\t\t\r\n\t\tif(this.audio) {\r\n\t\t\t// https://stackoverflow.com/a/28060352/4274827\r\n\t\t\tthis.audio.pause();\r\n\t\t\tthis.audio.removeAttribute('src');\r\n\t\t\tthis.audio.load();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.audio = new Audio();\r\n\t\t}\r\n\t\t\r\n\t\tthis._episode = episode;\r\n\t\tthis.audio.src = episode.enclosure?.url;\r\n\t\tthis.audio.currentTime = episode.position || 0;\r\n\t\tthis.audio.play();\r\n\r\n\t\tthis.setMediaSessionMetadata();\r\n\t}\r\n\r\n\tpause() {\r\n\t\tthis.audio?.pause();\r\n\t}\r\n\r\n\tresume() {\r\n\t\tthis.audio?.play();\r\n\t}\r\n\r\n\tsetCurrentTime(currentTime: number): void {\r\n\t\tthis.audio && (this.audio.currentTime = currentTime);\r\n\t}\r\n\r\n\tsetMediaSessionMetadata() {\r\n\t\tlet navigator: any = window.navigator;\r\n\t\tif(this._episode && 'mediaSession' in window.navigator) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tnavigator.mediaSession.metadata = new MediaMetadata({\r\n\t\t\t\ttitle: this._episode.title,\r\n\t\t\t\t// TODO: add podcast data to the player\r\n\t\t\t\t// artist: this._episode.,\r\n\t\t\t\tartwork: [\r\n\t\t\t\t\t{ src: this._episode.imageUrl, sizes: '512x512'},\r\n\t\t\t\t]\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tget episode() {\r\n\t\treturn this._episode;\r\n\t}\r\n\r\n\tgetPlayerState(): PodcastPlayerState {\r\n\t\treturn {\r\n\t\t\thasMedia: this.audio !== undefined,\r\n\t\t\tisPlaying: this.audio ? !this.audio.paused : false,\r\n\t\t\tduration: this.audio ? this.audio.duration : 0,\r\n\t\t\tcurrentTime: this.audio ? this.audio.currentTime : 0,\r\n\t\t\tepisode: this._episode\r\n\t\t}\r\n\t}\r\n\r\n\tstatic getInstance(): PodcastPlayerSingleton {\r\n\t\treturn this.instance || (this.instance = new PodcastPlayerSingleton())\r\n\t}\r\n}\r\n\r\nsetInterval(() => {\r\n\t// To be changed later\r\n\t// it should react to state changes on the player\r\n\tlet podcastController: PodcastController = new PodcastsControllerImplementation();\r\n\tlet podcastPlayer: PodcastPlayer = PodcastPlayerSingleton.getInstance();\r\n\tlet playerState = podcastPlayer.getPlayerState();\r\n\t\r\n\tif(playerState.isPlaying) {\r\n\t\tpodcastController.updateEpisodeCurrentTime(playerState.episode?.id as number, playerState.currentTime as number);\r\n\t}\r\n}, 5000);","import { IonButton, IonFooter, IonImg, IonLabel, IonRange, IonThumbnail, IonTitle, IonToolbar } from '@ionic/react';\r\nimport { RangeChangeEventDetail } from '@ionic/core'\r\nimport React from 'react';\r\nimport PodcastPlayer, {PodcastPlayerState, PodcastPlayerSingleton} from '../lib/PodcastPlayer'\r\n\r\nexport default class FooterPlayer extends React.Component<{}, PodcastPlayerState> {\r\n\tprivate podcastPlayer: PodcastPlayer = PodcastPlayerSingleton.getInstance();\r\n\tprivate timeout?: NodeJS.Timeout;\r\n\r\n\tconstructor() {\r\n\t\tsuper({});\r\n\t\tthis.state = this.podcastPlayer.getPlayerState();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.timeout = setInterval(() => {\r\n\t\t\tthis.setState(this.podcastPlayer.getPlayerState());\r\n\t\t}, 1000);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.timeout && clearInterval(this.timeout);\r\n\t}\r\n\r\n\thandleClickPause() {\r\n\t\tthis.podcastPlayer.pause();\r\n\t\tthis.setState(this.podcastPlayer.getPlayerState());\r\n\t}\r\n\r\n\thandleClickPlay() {\r\n\t\tthis.podcastPlayer.resume();\r\n\t\tthis.setState(this.podcastPlayer.getPlayerState());\r\n\t}\r\n\r\n\thandleRangeChanged(e: CustomEvent<RangeChangeEventDetail>): void {\r\n\t\t// 1. When starting a new podcast I saw the event being raised\r\n\t\t// with value = NaN\r\n\t\t// 2. updates in state seem to trigger the change event\r\n\t\t// we want to avoid setting the current time in this cases, as it\r\n\t\t// causes stutter in the audio\r\n\t\tif(typeof e.detail.value === 'number' && !isNaN(e.detail.value) && e.detail.value !== this.state.currentTime) {\r\n\t\t\tthis.podcastPlayer.setCurrentTime(e.detail.value as number);\r\n\t\t\tthis.setState(this.podcastPlayer.getPlayerState());\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static timeFormatter(seconds: number): string {\r\n\t\t// https://stackoverflow.com/a/25279399/4274827\r\n\t\tlet date = new Date(0);\r\n\t\tdate.setSeconds(seconds);\r\n\t\treturn date.toISOString().substr(11, 8);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<IonFooter>\r\n\t\t\t\t{this.state.episode &&\r\n\t\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t\t<IonThumbnail slot=\"start\">\r\n\t\t\t\t\t\t\t<IonImg src={this.state.episode.imageUrl}/>\r\n\t\t\t\t\t\t</IonThumbnail>\r\n\t\t\t\t\t\t<IonTitle>{this.state.episode.title}</IonTitle>\r\n\t\t\t\t\t\t<IonRange min={0} max={this.state.duration} value={this.state.currentTime} onIonChange={(e) => this.handleRangeChanged(e)}>\r\n\t\t\t\t\t\t\t<IonLabel slot=\"start\">{FooterPlayer.timeFormatter(this.state.currentTime || 0)}</IonLabel>\r\n\t\t\t\t\t\t\t<IonLabel slot=\"end\">{FooterPlayer.timeFormatter(this.state.duration || 0)}</IonLabel>\r\n\t\t\t\t\t\t</IonRange>\r\n\t\t\t\t\t\t{this.state.isPlaying && <IonButton slot=\"end\" onClick={() => this.handleClickPause()}>Pause</IonButton>}\r\n\t\t\t\t\t\t{!this.state.isPlaying && <IonButton slot=\"end\" onClick={() => this.handleClickPlay()}>Play</IonButton>}\r\n\t\t\t\t\t</IonToolbar>\r\n\t\t\t\t}\r\n\t\t\t</IonFooter>\r\n\t\t);\r\n\t}\r\n}","import { IonButton, IonButtons, IonContent, IonFooter, IonHeader, IonImg, IonItem, IonLabel, IonList, IonMenuButton, IonPage, IonRange, IonThumbnail, IonTitle, IonToolbar } from '@ionic/react';\r\nimport React from 'react';\r\nimport FooterPlayer from '../components/FooterPlayer'\r\n\r\nexport default class PageWithFooter extends React.Component<{}, {}> {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<IonPage>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t\t<FooterPlayer/>\r\n\t\t\t</IonPage>\r\n\t\t);\r\n\t}\r\n}","import { IonButtons, IonContent, IonHeader, IonMenuButton, IonPage, IonTitle, IonToolbar, IonSearchbar, IonList, IonItem, IonThumbnail, IonImg, IonLabel, IonButton } from '@ionic/react';\r\nimport React, { FormEvent, useState } from 'react';\r\nimport PodcastSearcher, {PodcastSearchResult, PodcastSearchResultItem} from '../lib/PodcastSearcher';\r\nimport SubscriptionHandler, { SubscriptionHandlerImplementation, Subscription} from '../lib/SubscriptionHandler';\r\nimport PageWithFooter from './PageWithFooter';\r\nimport parseOpml from '../lib/OpmlParser'\r\n\r\ntype PodcastSearchResultItemWithSubscription = PodcastSearchResultItem & {\r\n\tsubscribed: boolean;\r\n}\r\n\r\ntype PodcastSearchResultWithSubscription = {\r\n\titems: PodcastSearchResultItemWithSubscription[];\r\n}\r\n\r\ntype AddPodcastPageState = {\r\n\tpodcastSearchResult: PodcastSearchResultWithSubscription,\r\n\tsearchText: string\r\n};\r\n\r\nexport default class AddPodcastPage extends React.Component<{}, AddPodcastPageState> {\r\n\tsubscriptionHandler: SubscriptionHandler;\r\n\r\n\tconstructor(props: Readonly<{}>) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.subscriptionHandler = new SubscriptionHandlerImplementation();\r\n\t\tthis.state = {\r\n\t\t\tpodcastSearchResult: {\r\n\t\t\t\titems: [],\r\n\t\t\t},\r\n\t\t\tsearchText: ''\r\n\t\t}\r\n\t}\r\n\t\r\n\thandleSearchSubmit(e: FormEvent) {\r\n\t\te.preventDefault();\r\n\t\tlet ps: PodcastSearcher = new PodcastSearcher();\r\n\r\n\t\tthis.setState({\r\n\t\t\tpodcastSearchResult: {items: []}\r\n\t\t});\r\n\r\n\t\tps.search(this.state.searchText, (result) => {\r\n\t\t\tlet searchResultsWithSubscriptions = this.addDefaultSubscriptionToSearchResults(result);\r\n\t\t\t\r\n\t\t\tthis.subscriptionHandler.getSubscriptions()\r\n\t\t\t.then((subscriptions) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tpodcastSearchResult: this.adjustSubscriptionInSearchResults(searchResultsWithSubscriptions, subscriptions),\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t});\r\n\t}\r\n\r\n\taddDefaultSubscriptionToSearchResults(psr: PodcastSearchResult): PodcastSearchResultWithSubscription {\r\n\t\treturn {\r\n\t\t\titems: psr.items.map((item) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...item,\r\n\t\t\t\t\tsubscribed: false\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickSubscribe(e: React.MouseEvent<HTMLIonButtonElement, MouseEvent>, item: PodcastSearchResultItem): void {\r\n\t\tthis.subscriptionHandler.subscribe({\r\n\t\t\t...item\r\n\t\t})\r\n\t\t.then(() => this.subscriptionHandler.getSubscriptions())\r\n\t\t.then((subscriptions) => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tpodcastSearchResult: this.adjustSubscriptionInSearchResults(this.state.podcastSearchResult, subscriptions)\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tadjustSubscriptionInSearchResults(podcastSearchResult: PodcastSearchResultWithSubscription, subscriptions: Array<Subscription>): PodcastSearchResultWithSubscription {\r\n\t\treturn {\r\n\t\t\titems: podcastSearchResult.items.map((item) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...item,\r\n\t\t\t\t\tsubscribed: subscriptions.find((subscription) => subscription.feedUrl === item.feedUrl ) !== undefined\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t};\r\n\t}\r\n\t\r\n\tsetSearchText(searchText: string): void {\r\n\t\tthis.setState({\r\n\t\t\tsearchText: searchText\r\n\t\t});\r\n\t}\r\n\r\n\thandleClickImportOpml(): void {\r\n\t\tdocument.getElementById('opmlUploader')?.click();\r\n\t}\r\n\r\n\thandleChangeOpmlUploader(e: React.ChangeEvent<HTMLInputElement>): void {\r\n\t\tconst files = e.currentTarget.files;\r\n\t\tconst file = files && files[0];\r\n\r\n\t\tif(file) {\r\n\t\t\tconst reader = new FileReader();\r\n\r\n\t\t\treader.onload = (e) => {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst fileContent = e.currentTarget.result;\r\n\t\t\t\tthis.subscriptionHandler.subscribeToMany(parseOpml(fileContent));\r\n\t\t\t}\r\n\r\n\t\t\treader.readAsText(file);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<PageWithFooter>\r\n\t\t\t<IonHeader>\r\n\t\t\t\t<IonToolbar>\r\n\t\t\t\t<IonButtons slot=\"start\">\r\n\t\t\t\t\t<IonMenuButton />\r\n\t\t\t\t</IonButtons>\r\n\t\t\t\t<IonTitle>Search Podcast</IonTitle>\r\n\t\t\t\t</IonToolbar>\r\n\t\t\t</IonHeader>\r\n\t\t\t\r\n\r\n\t\t\t<IonContent fullscreen>\r\n\t\t\t\t<IonHeader collapse=\"condense\">\r\n\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t<IonTitle size=\"large\">Add Podcast</IonTitle>\r\n\t\t\t\t</IonToolbar>\r\n\t\t\t\t</IonHeader>\r\n\t\t\t\t<form onSubmit={e => this.handleSearchSubmit(e)}>\r\n\t\t\t\t\t<IonSearchbar value={this.state.searchText} debounce={0} onIonChange={e => this.setSearchText(e.detail.value!)}/>\r\n\t\t\t\t</form>\r\n\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t<IonButtons>\r\n\t\t\t\t\t\t<IonButton onClick={(e) => this.handleClickImportOpml()}>Import OPML file</IonButton>\r\n\t\t\t\t\t</IonButtons>\r\n\t\t\t\t</IonToolbar>\r\n\t\t\t\t<input id=\"opmlUploader\" type=\"file\" style={{display: \"none\"}} accept=\".opml, .xml\" onChange={(e) => this.handleChangeOpmlUploader(e)}></input>\r\n\t\t\t\t<IonList>\r\n\t\t\t\t\t{this.state.podcastSearchResult.items.map((podcast) => (\r\n\t\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t\t<IonThumbnail slot=\"start\">\r\n\t\t\t\t\t\t\t\t<IonImg src={podcast.imageUrl}/>\r\n\t\t\t\t\t\t\t</IonThumbnail>\r\n\t\t\t\t\t\t\t<IonLabel>\r\n\t\t\t\t\t\t\t\t<h2>{podcast.title}</h2>\r\n\t\t\t\t\t\t\t\t<p>{podcast.description}</p>\r\n\t\t\t\t\t\t\t</IonLabel>\r\n\t\t\t\t\t\t\t{podcast.subscribed ?\r\n\t\t\t\t\t\t\t<IonButton disabled={true}>Subscribed</IonButton> :\r\n\t\t\t\t\t\t\t<IonButton onClick={e => this.handleClickSubscribe(e, podcast)}>Subscribe</IonButton>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</IonList>\r\n\t\t\t</IonContent>\r\n\t\t\t</PageWithFooter>\r\n\t\t);\r\n\t}\r\n}","type OpmlPodcast = {\r\n\ttitle?: string,\r\n\tfeedUrl: string,\r\n\tlink?: string,\r\n};\r\n\r\nexport default function parseOpml(opmlContent: string): OpmlPodcast[] {\r\n\tconst domParser = new DOMParser();\r\n\r\n\tconst parsedDocument = domParser.parseFromString(opmlContent, 'application/xml');\r\n\r\n\tconst outlines = Array.from(parsedDocument.querySelectorAll('outline[type=\"rss\"]'));\r\n\r\n\treturn outlines\r\n\t.filter((outline) => outline.attributes.getNamedItem('xmlUrl')?.value)\r\n\t.map((outline) => {\r\n\t\treturn {\r\n\t\t\ttitle: outline.attributes.getNamedItem('title')?.value,\r\n\t\t\tfeedUrl: outline.attributes.getNamedItem('xmlUrl')?.value || '',\r\n\t\t\tlink: outline.attributes.getNamedItem('htmlUrl')?.value,\r\n\t\t}\r\n\t});\r\n}","import { IonButtons, IonContent, IonHeader, IonMenuButton, IonPage, IonTitle, IonToolbar } from '@ionic/react';\r\nimport React from 'react';\r\nimport { useParams } from 'react-router';\r\nimport ExploreContainer from '../components/ExploreContainer';\r\nimport PageWithFooter from './PageWithFooter';\r\n\r\nconst Home: React.FC = () => {\r\n\tconst { name } = useParams<{ name: string; }>();\r\n\r\n\treturn (\r\n\t<PageWithFooter>\r\n\t\t<IonHeader>\r\n\t\t\t<IonToolbar>\r\n\t\t\t\t<IonButtons slot=\"start\">\r\n\t\t\t\t\t<IonMenuButton />\r\n\t\t\t\t</IonButtons>\r\n\t\t\t\t<IonTitle>Welcome to podStation</IonTitle>\r\n\t\t\t</IonToolbar>\r\n\t\t</IonHeader>\r\n\r\n\t\t<IonContent fullscreen>\r\n\t\t\t<p>podStation is planned to be a web application for subscribing and listening to podcasts.</p>\r\n\t\t\t<p>As you can see, it is still under construction.</p>\r\n\t\t\t<p>Come back from time to time to see how we are doing.</p>\r\n\t\t\t<p>Don't get to attached to any functionality or to your data, this may break or change, it is not ready for use yet</p>\r\n\t\t</IonContent>\r\n\t</PageWithFooter>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import { IonButtons, IonContent, IonHeader, IonImg, IonItem, IonLabel, IonList, IonMenuButton, IonRefresher, IonRefresherContent, IonThumbnail, IonTitle, IonToolbar } from '@ionic/react';\r\nimport { RefresherEventDetail } from '@ionic/core';\r\nimport React from 'react';\r\nimport PodcastsController, {PodcastsControllerImplementation, PodcastView} from '../lib/PodcastsController';\r\nimport PageWithFooter from './PageWithFooter';\r\n\r\nclass PodcastsPageState {\r\n\tpodcasts: Array<PodcastView> = [];\r\n}\r\n\r\nexport default class PodcastsPage extends React.Component<{}, PodcastsPageState> {\r\n\tpodcastsController: PodcastsController = new PodcastsControllerImplementation();\r\n\r\n\tcomponentWillMount() {\r\n\t\tthis.setState(new PodcastsPageState());\r\n\t}\r\n\t\r\n\tasync componentDidMount() {\r\n\t\tthis.setState({\r\n\t\t\tpodcasts: await this.podcastsController.getPodcasts()\r\n\t\t});\r\n\t}\r\n\r\n\tasync doRefresh(e: CustomEvent<RefresherEventDetail>) {\r\n\t\tawait this.podcastsController.updatePodcasts();\r\n\t\te.detail.complete();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<PageWithFooter>\r\n\t\t\t\t<IonHeader>\r\n\t\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t<IonButtons slot=\"start\">\r\n\t\t\t\t\t\t<IonMenuButton />\r\n\t\t\t\t\t</IonButtons>\r\n\t\t\t\t\t<IonTitle>Your Podcasts</IonTitle>\r\n\t\t\t\t\t</IonToolbar>\r\n\t\t\t\t</IonHeader>\r\n\t\r\n\t\t\t\t<IonContent fullscreen>\r\n\t\t\t\t\t<IonRefresher slot=\"fixed\" onIonRefresh={(e) => this.doRefresh(e)}>\r\n\t\t\t\t\t\t<IonRefresherContent pullingText=\"Pull to refresh\"></IonRefresherContent>\r\n\t\t\t\t\t</IonRefresher>\r\n\t\t\t\t\t<IonList>\r\n\t\t\t\t\t\t{this.state.podcasts.map((podcast) => (\r\n\t\t\t\t\t\t\t<IonItem routerLink={`/page/Podcast/feed/${encodeURIComponent(btoa(podcast.feedUrl))}`}>\r\n\t\t\t\t\t\t\t\t<IonThumbnail slot=\"start\">\r\n\t\t\t\t\t\t\t\t\t{podcast.imageUrl && <IonImg src={podcast.imageUrl}/>}\r\n\t\t\t\t\t\t\t\t</IonThumbnail>\r\n\t\t\t\t\t\t\t\t<IonLabel>\r\n\t\t\t\t\t\t\t\t\t<h2>{podcast.title}</h2>\r\n\t\t\t\t\t\t\t\t\t<p>{podcast.description}</p>\r\n\t\t\t\t\t\t\t\t</IonLabel>\r\n\t\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</IonList>\r\n\t\t\t\t</IonContent>\r\n\t\t\t</PageWithFooter>\r\n\t\t);\r\n\t}\r\n}","import { IonButton, IonImg, IonItem, IonLabel, IonThumbnail } from '@ionic/react';\r\nimport React from 'react';\r\nimport { PodcastPlayerSingleton } from '../lib/PodcastPlayer';\r\nimport { EpisodeView, PodcastView } from '../lib/PodcastsController';\r\n\r\ntype EpisodeItemProps = {\r\n\tshowThumbnail?: boolean,\r\n\tepisode: EpisodeView,\r\n\tpodcast?: PodcastView\r\n}\r\n\r\nexport default class EpisodeItem extends React.Component<EpisodeItemProps> {\r\n\thandleClickPlay(e: React.MouseEvent<HTMLIonButtonElement, MouseEvent>): void {\r\n\t\tconst podcastPlayer = PodcastPlayerSingleton.getInstance();\r\n\r\n\t\tpodcastPlayer.play(this.props.episode);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t<IonItem>\r\n\t\t\t{\r\n\t\t\t\tthis.props.showThumbnail && \r\n\t\t\t\t<IonThumbnail slot=\"start\">\r\n\t\t\t\t\t{this.props.podcast?.imageUrl && <IonImg src={this.props.podcast.imageUrl}/>}\r\n\t\t\t\t</IonThumbnail>\r\n\t\t\t}\r\n\t\t\t<IonLabel>\r\n\t\t\t\t<h2>{this.props.episode.title}</h2>\r\n\t\t\t\t{this.props.podcast && <h3>{this.props.podcast.title}</h3>}\r\n\t\t\t\t<p>{this.props.episode.description}</p>\r\n\t\t\t</IonLabel>\r\n\t\t\t<IonButton slot=\"end\" onClick={e => this.handleClickPlay(e)}>Play</IonButton>\r\n\t\t</IonItem>\r\n\t\t)\r\n\t}\r\n}","import { IonButton, IonButtons, IonContent, IonHeader, IonImg, IonInfiniteScroll, IonInfiniteScrollContent, IonItem, IonLabel, IonList, IonMenuButton, IonPage, IonThumbnail, IonTitle, IonToolbar } from '@ionic/react';\r\nimport React from 'react';\r\nimport PodcastsController, {PodcastsControllerImplementation, PodcastView, EpisodeView } from '../lib/PodcastsController';\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { PodcastPlayerSingleton } from '../lib/PodcastPlayer'\r\nimport PageWithFooter from './PageWithFooter';\r\nimport EpisodeItem from '../components/EpisodeItem';\r\n\r\ninterface PodcastPageProps extends RouteComponentProps<{\r\n\tencodedFeedUrl: string;\r\n}> {};\r\n\r\ntype PodcastPageState = {\r\n\tpodcast?: PodcastView,\r\n\tepisodes?: EpisodeView[]\r\n}\r\n\r\nexport default class PodcastPage extends React.Component<PodcastPageProps, PodcastPageState> {\r\n\tprivate podcastsController: PodcastsController = new PodcastsControllerImplementation();\r\n\tprivate allEpisodes: EpisodeView[] = [];\r\n\tprivate lastItemToRender = 20;\r\n\r\n\tconstructor(props: PodcastPageProps) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {}\r\n\t}\r\n\t\r\n\tasync componentDidMount() {\r\n\t\tconst feedUrl = atob(decodeURIComponent(this.props.match.params.encodedFeedUrl));\r\n\t\tthis.setState({\r\n\t\t\tpodcast: await this.podcastsController.getPodcast(feedUrl)\r\n\t\t});\r\n\r\n\t\tthis.allEpisodes = await this.podcastsController.getEpisodes(feedUrl);\r\n\r\n\t\tthis.setState({\r\n\t\t\tepisodes: this.allEpisodes.slice(0, this.lastItemToRender + 1)\r\n\t\t});\r\n\t}\r\n\r\n\thandleInfiniteScroll(e: CustomEvent<void>) {\r\n\t\tthis.lastItemToRender += 20;\r\n\r\n\t\tthis.lastItemToRender = Math.min(this.lastItemToRender, this.allEpisodes.length);\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tepisodes: this.allEpisodes.slice(0, this.lastItemToRender + 1)\r\n\t\t});\r\n\r\n\t\t(e.target as HTMLIonInfiniteScrollElement).complete();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<PageWithFooter>\r\n\t\t\t\t<IonHeader>\r\n\t\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t<IonButtons slot=\"start\">\r\n\t\t\t\t\t\t<IonMenuButton />\r\n\t\t\t\t\t</IonButtons>\r\n\t\t\t\t\t<IonThumbnail slot=\"start\">\r\n\t\t\t\t\t\t<IonImg src={this.state.podcast && this.state.podcast.imageUrl}/>\r\n\t\t\t\t\t</IonThumbnail>\r\n\t\t\t\t\t<IonTitle>{this.state.podcast && this.state.podcast.title}</IonTitle>\r\n\t\t\t\t\t</IonToolbar>\r\n\t\t\t\t</IonHeader>\r\n\t\t\t\t<IonContent fullscreen>\r\n\t\t\t\t\t<IonList>\r\n\t\t\t\t\t\t{this.state.episodes && this.state.episodes.map((episode) => (\r\n\t\t\t\t\t\t\t<EpisodeItem episode={episode}/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</IonList>\r\n\t\t\t\t\t<IonInfiniteScroll onIonInfinite={e => this.handleInfiniteScroll(e)}>\r\n\t\t\t\t\t\t<IonInfiniteScrollContent></IonInfiniteScrollContent>\r\n\t\t\t\t\t</IonInfiniteScroll>\r\n\t\t\t\t</IonContent>\r\n\t\t\t</PageWithFooter>\r\n\t\t);\r\n\t}\r\n}","import { IonButtons, IonContent, IonHeader, IonMenuButton, IonPage, IonTitle, IonToolbar } from '@ionic/react';\r\nimport React from 'react';\r\nimport { useParams } from 'react-router';\r\nimport PageWithFooter from './PageWithFooter';\r\n\r\nconst About: React.FC = () => {\r\n\tconst { name } = useParams<{ name: string; }>();\r\n\r\n\treturn (\r\n\t<PageWithFooter>\r\n\t\t<IonHeader>\r\n\t\t\t<IonToolbar>\r\n\t\t\t\t<IonButtons slot=\"start\">\r\n\t\t\t\t\t<IonMenuButton />\r\n\t\t\t\t</IonButtons>\r\n\t\t\t\t<IonTitle>About podStation</IonTitle>\r\n\t\t\t</IonToolbar>\r\n\t\t</IonHeader>\r\n\r\n\t\t<IonContent fullscreen>\r\n\t\t\t<p>podStation is planned to be a web application for subscribing and listening to podcasts.</p>\r\n\t\t\t<p>As you can see, it is still under construction.</p>\r\n\t\t\t<p>Come back from time to time to see how we are doing.</p>\r\n\t\t\t<p>Don't get to attached to any functionality or to your data, this may break or change, it is not ready for use yet</p>\r\n\t\t\t<p>It is an Open Source project, if you want to know more about it, get to <a href=\"https://github.com/podStation/podstation-ionic-pwa\" target=\"_blank\">our github project</a>.</p>\r\n\t\t</IonContent>\r\n\t</PageWithFooter>\r\n\t);\r\n};\r\n\r\nexport default About;\r\n","import { IonButtons, IonContent, IonHeader, IonMenuButton, IonPage, IonTitle, IonToolbar } from '@ionic/react';\r\nimport React from 'react';\r\nimport { useParams } from 'react-router';\r\nimport PageWithFooter from './PageWithFooter';\r\n\r\nconst FundIt: React.FC = () => {\r\n\tconst { name } = useParams<{ name: string; }>();\r\n\r\n\treturn (\r\n\t<PageWithFooter>\r\n\t\t<IonHeader>\r\n\t\t\t<IonToolbar>\r\n\t\t\t\t<IonButtons slot=\"start\">\r\n\t\t\t\t\t<IonMenuButton />\r\n\t\t\t\t</IonButtons>\r\n\t\t\t\t<IonTitle>Fund podStation</IonTitle>\r\n\t\t\t</IonToolbar>\r\n\t\t</IonHeader>\r\n\r\n\t\t<IonContent fullscreen>\r\n\t\t\t<p>podStation is brought to you in a <i>value for value</i> model.</p>\r\n\t\t\t<p>You decide how much value it brings to you, and compensate it accordingly.</p>\r\n\t\t\t<p>If you can't fund it, feel free to continue to use it, as its mission is to make podcasts accessible to everyone</p>\r\n\t\t\t<p>Fund it in <a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=DEQFCARLYBXXE\" target=\"_blank\">PayPal</a></p> \r\n\t\t</IonContent>\r\n\t</PageWithFooter>\r\n\t);\r\n};\r\n\r\nexport default FundIt;\r\n","import { IonButton, IonButtons, IonContent, IonHeader, IonIcon, IonImg, IonInfiniteScroll, IonInfiniteScrollContent, IonItem, IonLabel, IonList, IonMenuButton, IonPage, IonThumbnail, IonTitle, IonToolbar } from '@ionic/react';\r\nimport React from 'react';\r\nimport PodcastsController, {PodcastsControllerImplementation, EpisodeView, EpisodeWithPodcastView } from '../lib/PodcastsController';\r\nimport { PodcastPlayerSingleton } from '../lib/PodcastPlayer'\r\nimport PageWithFooter from './PageWithFooter';\r\nimport { playOutline, playSharp } from 'ionicons/icons';\r\nimport { EOPNOTSUPP } from 'constants';\r\nimport EpisodeItem from '../components/EpisodeItem';\r\n\r\ntype InProgressPageState = {\r\n\tepisodes?: EpisodeWithPodcastView[]\r\n}\r\n\r\nexport default class InProgressPage extends React.Component<{}, InProgressPageState> {\r\n\tprivate podcastsController: PodcastsController = new PodcastsControllerImplementation();\r\n\tprivate allEpisodes: EpisodeWithPodcastView[] = [];\r\n\tprivate lastItemToRender = 20;\r\n\r\n\tconstructor(props: InProgressPageState) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {}\r\n\t}\r\n\t\r\n\tasync componentDidMount() {\r\n\t\tthis.allEpisodes = await this.podcastsController.getEpisodesInProgress();\r\n\r\n\t\tthis.setState({\r\n\t\t\tepisodes: this.allEpisodes.slice(0, this.lastItemToRender + 1)\r\n\t\t});\r\n\t}\r\n\r\n\thandleInfiniteScroll(e: CustomEvent<void>) {\r\n\t\tthis.lastItemToRender += 20;\r\n\r\n\t\tthis.lastItemToRender = Math.min(this.lastItemToRender, this.allEpisodes.length);\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tepisodes: this.allEpisodes.slice(0, this.lastItemToRender + 1)\r\n\t\t});\r\n\r\n\t\t(e.target as HTMLIonInfiniteScrollElement).complete();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<PageWithFooter>\r\n\t\t\t\t<IonHeader>\r\n\t\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t<IonButtons slot=\"start\">\r\n\t\t\t\t\t\t<IonMenuButton />\r\n\t\t\t\t\t</IonButtons>\r\n\t\t\t\t\t<IonTitle>In Progress</IonTitle>\r\n\t\t\t\t\t</IonToolbar>\r\n\t\t\t\t</IonHeader>\r\n\t\t\t\t<IonContent fullscreen>\r\n\t\t\t\t\t<IonList>\r\n\t\t\t\t\t\t{this.state.episodes && this.state.episodes.map((episode) => (\r\n\t\t\t\t\t\t\t<EpisodeItem episode={episode} podcast={episode.podcast} showThumbnail={true}/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</IonList>\r\n\t\t\t\t\t<IonInfiniteScroll onIonInfinite={e => this.handleInfiniteScroll(e)}>\r\n\t\t\t\t\t\t<IonInfiniteScrollContent></IonInfiniteScrollContent>\r\n\t\t\t\t\t</IonInfiniteScroll>\r\n\t\t\t\t</IonContent>\r\n\t\t\t</PageWithFooter>\r\n\t\t);\r\n\t}\r\n}","import { IonButton, IonButtons, IonContent, IonHeader, IonIcon, IonImg, IonInfiniteScroll, IonInfiniteScrollContent, IonItem, IonLabel, IonList, IonMenuButton, IonPage, IonThumbnail, IonTitle, IonToolbar } from '@ionic/react';\r\nimport React from 'react';\r\nimport OfflineStorageHandler, { OfflineStorageHandlerImplementation } from '../lib/OfflineStorageHandler';\r\nimport PageWithFooter from './PageWithFooter';\r\n\r\ntype SettingsState = {\r\n}\r\n\r\nexport default class SettingsPage extends React.Component<{}, SettingsState> {\r\n\tofflineStorageHandler: OfflineStorageHandler = new OfflineStorageHandlerImplementation();\r\n\t\r\n\tconstructor(props: SettingsState) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {}\r\n\t}\r\n\r\n\thandleClickReset(e: React.MouseEvent<HTMLIonButtonElement, MouseEvent>): void {\r\n\t\tthis.offlineStorageHandler.deleteDatabase();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<PageWithFooter>\r\n\t\t\t\t<IonHeader>\r\n\t\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t<IonButtons slot=\"start\">\r\n\t\t\t\t\t\t<IonMenuButton />\r\n\t\t\t\t\t</IonButtons>\r\n\t\t\t\t\t<IonTitle>Settings</IonTitle>\r\n\t\t\t\t\t</IonToolbar>\r\n\t\t\t\t</IonHeader>\r\n\t\t\t\t<IonContent fullscreen>\r\n\t\t\t\t\t<IonButton onClick={(e) => this.handleClickReset(e)}>Reset</IonButton>\r\n\t\t\t\t</IonContent>\r\n\t\t\t</PageWithFooter>\r\n\t\t);\r\n\t}\r\n}","import { IonButtons, IonContent, IonHeader, IonInfiniteScroll, IonInfiniteScrollContent, IonList, IonMenuButton, IonTitle, IonToolbar } from '@ionic/react';\r\nimport React from 'react';\r\nimport PodcastsController, {PodcastsControllerImplementation, EpisodeWithPodcastView } from '../lib/PodcastsController';\r\nimport PageWithFooter from './PageWithFooter';\r\nimport EpisodeItem from '../components/EpisodeItem';\r\n\r\ntype EpisodesPageState = {\r\n\tepisodes: EpisodeWithPodcastView[]\r\n}\r\n\r\nexport default class EpisodesPage extends React.Component<{}, EpisodesPageState> {\r\n\tprivate static readonly EPISODES_PER_PAGE: number = 20;\r\n\tprivate podcastsController: PodcastsController = new PodcastsControllerImplementation();\r\n\r\n\tconstructor(props: {}) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tepisodes:[]\r\n\t\t}\r\n\t}\r\n\t\r\n\tasync componentDidMount() {\r\n\t\t// Maximum date, see https://stackoverflow.com/a/43794682/4274827\r\n\t\tconst episodes = await this.podcastsController.getAllEpisodes(EpisodesPage.EPISODES_PER_PAGE, new Date(8640000000000000));\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tepisodes: episodes\r\n\t\t});\r\n\t}\r\n\r\n\tasync handleInfiniteScroll(e: CustomEvent<void>) {\r\n\t\tif(this.state.episodes.length) {\r\n\t\t\tconst lastShownEpisode = this.state.episodes[this.state.episodes.length - 1];\r\n\r\n\t\t\t// TODO: What to do with items without pubDate?\r\n\t\t\tconst episodes = await this.podcastsController.getAllEpisodes(EpisodesPage.EPISODES_PER_PAGE, lastShownEpisode.pubDate || new Date());\r\n\r\n\t\t\tif(episodes[0].id === lastShownEpisode.id) {\r\n\t\t\t\tepisodes.splice(0, 1);\r\n\t\t\t}\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tepisodes: [...this.state.episodes, ...episodes]\r\n\t\t\t});\r\n\r\n\t\t\t(e.target as HTMLIonInfiniteScrollElement).complete();\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<PageWithFooter>\r\n\t\t\t\t<IonHeader>\r\n\t\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t<IonButtons slot=\"start\">\r\n\t\t\t\t\t\t<IonMenuButton />\r\n\t\t\t\t\t</IonButtons>\r\n\t\t\t\t\t<IonTitle>Episodes</IonTitle>\r\n\t\t\t\t\t</IonToolbar>\r\n\t\t\t\t</IonHeader>\r\n\t\t\t\t<IonContent fullscreen>\r\n\t\t\t\t\t<IonList>\r\n\t\t\t\t\t\t{this.state.episodes && this.state.episodes.map((episode) => (\r\n\t\t\t\t\t\t\t<EpisodeItem showThumbnail={true} episode={episode} podcast={episode.podcast}/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</IonList>\r\n\t\t\t\t\t<IonInfiniteScroll onIonInfinite={e => this.handleInfiniteScroll(e)}>\r\n\t\t\t\t\t\t<IonInfiniteScrollContent></IonInfiniteScrollContent>\r\n\t\t\t\t\t</IonInfiniteScroll>\r\n\t\t\t\t</IonContent>\r\n\t\t\t</PageWithFooter>\r\n\t\t);\r\n\t}\r\n}","import Menu from './components/Menu';\nimport AddPodcastPage from './pages/AddPodcastPage'\nimport Home from './pages/Home'\nimport React from 'react';\nimport { IonApp, IonButton, IonContent, IonFooter, IonRouterOutlet, IonSplitPane, IonTitle, IonToolbar } from '@ionic/react';\nimport { IonReactHashRouter } from '@ionic/react-router';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\nimport PodcastsPage from './pages/PodcastsPage';\nimport PodcastPage from './pages/PodcastPage';\nimport About from './pages/About';\nimport FundIt from './pages/FundIt';\nimport InProgressPage from './pages/InProgress';\nimport SettingsPage from './pages/Settings';\nimport EpisodesPage from './pages/EpisodesPage';\n\nconst App: React.FC = () => {\n\treturn (\n\t\t<IonApp>\n\t\t\t<IonReactHashRouter>\n\t\t\t\t<IonSplitPane contentId=\"main\">\n\t\t\t\t<Menu />\n\t\t\t\t<IonContent id=\"main\">\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/page/AddPodcast\" component={AddPodcastPage} exact />\n\t\t\t\t\t\t<Route path=\"/page/Home\" component={Home} exact />\n\t\t\t\t\t\t<Route path=\"/page/Podcasts\" component={PodcastsPage} exact />\n\t\t\t\t\t\t<Route path=\"/page/Podcast/feed/:encodedFeedUrl\" component={PodcastPage} exact />\n\t\t\t\t\t\t<Route path=\"/page/Episodes\" component={EpisodesPage} exact />\n\t\t\t\t\t\t<Route path=\"/page/InProgress\" component={InProgressPage} exact />\n\t\t\t\t\t\t<Route path=\"/page/About\" component={About} exact />\n\t\t\t\t\t\t<Route path=\"/page/FundIt\" component={FundIt} exact />\n\t\t\t\t\t\t<Route path=\"/page/Settings\" component={SettingsPage} exact />\n\t\t\t\t\t\t<Redirect from=\"/\" to=\"/page/Home\" exact />\n\t\t\t\t\t</Switch>\n\t\t\t\t</IonContent>\n\t\t\t\t</IonSplitPane>\n\t\t\t</IonReactHashRouter>\n\t\t</IonApp>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t109,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t110,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t111,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t112,\n\t\t18\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t113,\n\t\t19\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t114,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t115,\n\t\t20\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t116,\n\t\t21\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t117,\n\t\t22\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t118,\n\t\t23\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t119,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t120,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t121,\n\t\t24\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t122,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t123,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t124,\n\t\t25\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t125,\n\t\t26\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t126,\n\t\t27\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t127,\n\t\t28\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t128,\n\t\t29\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t129,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t130,\n\t\t15\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t131,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t132,\n\t\t30\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t133,\n\t\t31\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t134,\n\t\t32\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t135,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t136,\n\t\t17\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t137,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t138,\n\t\t33\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t139,\n\t\t34\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t140,\n\t\t35\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t141,\n\t\t36\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t142,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t143,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t144,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t145,\n\t\t37\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t146,\n\t\t16\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t147,\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t148,\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t149,\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t150,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t151,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 68;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t155,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 90;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}